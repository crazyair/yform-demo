// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`YFormItems isShow 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <form
        class="ant-form ant-form-horizontal"
      >
        <div
          class="yform-items"
        />
      </form>
    </div>
  </body>,
  "container": <div>
    <form
      class="ant-form ant-form-horizontal"
    >
      <div
        class="yform-items"
      />
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`YFormItems list max min 1`] = `
<InternalForm
  initialValues={
    Object {
      "a": Array [
        1,
        2,
        3,
      ],
    }
  }
>
  <ForwardRef(InternalForm)
    initialValues={
      Object {
        "a": Array [
          1,
          2,
          3,
        ],
      }
    }
    onFinish={[Function]}
  >
    <SizeContextProvider>
      <ForwardRef(Form)
        className="ant-form ant-form-horizontal"
        form={
          Object {
            "__INTERNAL__": Object {
              "name": undefined,
            },
            "getFieldError": [Function],
            "getFieldValue": [Function],
            "getFieldsError": [Function],
            "getFieldsValue": [Function],
            "getInternalHooks": [Function],
            "isFieldTouched": [Function],
            "isFieldValidating": [Function],
            "isFieldsTouched": [Function],
            "isFieldsValidating": [Function],
            "resetFields": [Function],
            "scrollToField": [Function],
            "setFields": [Function],
            "setFieldsValue": [Function],
            "submit": [Function],
            "validateFields": [Function],
          }
        }
        initialValues={
          Object {
            "a": Array [
              1,
              2,
              3,
            ],
          }
        }
        onFinish={[Function]}
      >
        <form
          className="ant-form ant-form-horizontal"
          onSubmit={[Function]}
        >
          <Items>
            <div
              className="yform-items"
            >
              <Items>
                <div
                  className="yform-items"
                >
                  <_default
                    componentProps={
                      Object {
                        "maxNum": 3,
                        "minNum": 3,
                      }
                    }
                    items={[Function]}
                    key="a"
                    name="a"
                    type="list"
                  >
                    <div
                      className="list"
                    >
                      <FormList
                        name="a"
                      >
                        <List
                          name="a"
                        >
                          <Field
                            name={Array []}
                            shouldUpdate={[Function]}
                            trigger="onChange"
                            validateTrigger="onChange"
                            valuePropName="value"
                          >
                            <Items
                              key="0"
                              noStyle={true}
                            >
                              <_default
                                addonAfter={
                                  <div
                                    className="padding-icons inline-icons"
                                    style={
                                      Object {
                                        "display": "inline-block",
                                        "width": "0px",
                                      }
                                    }
                                  />
                                }
                                key="0"
                                name={
                                  Array [
                                    0,
                                  ]
                                }
                                rules={
                                  Array [
                                    Object {
                                      "message": "此处不能为空",
                                      "required": undefined,
                                    },
                                  ]
                                }
                              >
                                <FormItem>
                                  <Row
                                    className="ant-form-item"
                                    gutter={0}
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        prefixCls="ant-form"
                                      />
                                      <FormItemInput
                                        errors={Array []}
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        validateStatus=""
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <FormItem
                                                name={
                                                  Array [
                                                    0,
                                                  ]
                                                }
                                                noStyle={true}
                                                rules={
                                                  Array [
                                                    Object {
                                                      "message": "此处不能为空",
                                                      "required": undefined,
                                                    },
                                                  ]
                                                }
                                              >
                                                <Field
                                                  name={
                                                    Array [
                                                      0,
                                                    ]
                                                  }
                                                  noStyle={true}
                                                  onReset={[Function]}
                                                  rules={
                                                    Array [
                                                      Object {
                                                        "message": "此处不能为空",
                                                        "required": undefined,
                                                      },
                                                    ]
                                                  }
                                                  trigger="onChange"
                                                  validateTrigger="onChange"
                                                  valuePropName="value"
                                                >
                                                  <Input
                                                    id="a_0"
                                                    onChange={[Function]}
                                                    placeholder="请输入"
                                                    style={
                                                      Object {
                                                        "display": "inline-block",
                                                        "width": "calc(100% - 0px)",
                                                      }
                                                    }
                                                    type="text"
                                                    value={1}
                                                  >
                                                    <ClearableLabeledInput
                                                      element={
                                                        <input
                                                          className="ant-input"
                                                          id="a_0"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          placeholder="请输入"
                                                          style={
                                                            Object {
                                                              "display": "inline-block",
                                                              "width": "calc(100% - 0px)",
                                                            }
                                                          }
                                                          type="text"
                                                          value={1}
                                                        />
                                                      }
                                                      focused={false}
                                                      handleReset={[Function]}
                                                      id="a_0"
                                                      inputType="input"
                                                      onChange={[Function]}
                                                      placeholder="请输入"
                                                      prefixCls="ant-input"
                                                      style={
                                                        Object {
                                                          "display": "inline-block",
                                                          "width": "calc(100% - 0px)",
                                                        }
                                                      }
                                                      type="text"
                                                      value={1}
                                                    >
                                                      <input
                                                        className="ant-input"
                                                        id="a_0"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder="请输入"
                                                        style={
                                                          Object {
                                                            "display": "inline-block",
                                                            "width": "calc(100% - 0px)",
                                                          }
                                                        }
                                                        type="text"
                                                        value={1}
                                                      />
                                                    </ClearableLabeledInput>
                                                  </Input>
                                                </Field>
                                              </FormItem>
                                              <div
                                                className="padding-icons inline-icons"
                                                style={
                                                  Object {
                                                    "display": "inline-block",
                                                    "width": "0px",
                                                  }
                                                }
                                              />
                                            </div>
                                            <ForwardRef
                                              motionAppear={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <CSSMotion
                                                internalRef={null}
                                                motionAppear={true}
                                                motionEnter={true}
                                                motionLeave={true}
                                                motionName="show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              />
                                            </ForwardRef>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </FormItem>
                              </_default>
                            </Items>
                            <Items
                              key="1"
                              noStyle={true}
                            >
                              <_default
                                addonAfter={
                                  <div
                                    className="padding-icons inline-icons"
                                    style={
                                      Object {
                                        "display": "inline-block",
                                        "width": "0px",
                                      }
                                    }
                                  />
                                }
                                key="0"
                                label={false}
                                name={
                                  Array [
                                    1,
                                  ]
                                }
                                rules={
                                  Array [
                                    Object {
                                      "message": "此处不能为空",
                                      "required": undefined,
                                    },
                                  ]
                                }
                              >
                                <FormItem
                                  label={false}
                                >
                                  <Row
                                    className="ant-form-item"
                                    gutter={0}
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        label={false}
                                        prefixCls="ant-form"
                                      />
                                      <FormItemInput
                                        errors={Array []}
                                        label={false}
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        validateStatus=""
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <FormItem
                                                label={false}
                                                name={
                                                  Array [
                                                    1,
                                                  ]
                                                }
                                                noStyle={true}
                                                rules={
                                                  Array [
                                                    Object {
                                                      "message": "此处不能为空",
                                                      "required": undefined,
                                                    },
                                                  ]
                                                }
                                              >
                                                <Field
                                                  label={false}
                                                  name={
                                                    Array [
                                                      1,
                                                    ]
                                                  }
                                                  noStyle={true}
                                                  onReset={[Function]}
                                                  rules={
                                                    Array [
                                                      Object {
                                                        "message": "此处不能为空",
                                                        "required": undefined,
                                                      },
                                                    ]
                                                  }
                                                  trigger="onChange"
                                                  validateTrigger="onChange"
                                                  valuePropName="value"
                                                >
                                                  <Input
                                                    id="a_1"
                                                    onChange={[Function]}
                                                    placeholder="请输入"
                                                    style={
                                                      Object {
                                                        "display": "inline-block",
                                                        "width": "calc(100% - 0px)",
                                                      }
                                                    }
                                                    type="text"
                                                    value={2}
                                                  >
                                                    <ClearableLabeledInput
                                                      element={
                                                        <input
                                                          className="ant-input"
                                                          id="a_1"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          placeholder="请输入"
                                                          style={
                                                            Object {
                                                              "display": "inline-block",
                                                              "width": "calc(100% - 0px)",
                                                            }
                                                          }
                                                          type="text"
                                                          value={2}
                                                        />
                                                      }
                                                      focused={false}
                                                      handleReset={[Function]}
                                                      id="a_1"
                                                      inputType="input"
                                                      onChange={[Function]}
                                                      placeholder="请输入"
                                                      prefixCls="ant-input"
                                                      style={
                                                        Object {
                                                          "display": "inline-block",
                                                          "width": "calc(100% - 0px)",
                                                        }
                                                      }
                                                      type="text"
                                                      value={2}
                                                    >
                                                      <input
                                                        className="ant-input"
                                                        id="a_1"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder="请输入"
                                                        style={
                                                          Object {
                                                            "display": "inline-block",
                                                            "width": "calc(100% - 0px)",
                                                          }
                                                        }
                                                        type="text"
                                                        value={2}
                                                      />
                                                    </ClearableLabeledInput>
                                                  </Input>
                                                </Field>
                                              </FormItem>
                                              <div
                                                className="padding-icons inline-icons"
                                                style={
                                                  Object {
                                                    "display": "inline-block",
                                                    "width": "0px",
                                                  }
                                                }
                                              />
                                            </div>
                                            <ForwardRef
                                              motionAppear={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <CSSMotion
                                                internalRef={null}
                                                motionAppear={true}
                                                motionEnter={true}
                                                motionLeave={true}
                                                motionName="show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              />
                                            </ForwardRef>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </FormItem>
                              </_default>
                            </Items>
                            <Items
                              key="2"
                              noStyle={true}
                            >
                              <_default
                                addonAfter={
                                  <div
                                    className="padding-icons inline-icons"
                                    style={
                                      Object {
                                        "display": "inline-block",
                                        "width": "0px",
                                      }
                                    }
                                  />
                                }
                                key="0"
                                label={false}
                                name={
                                  Array [
                                    2,
                                  ]
                                }
                                rules={
                                  Array [
                                    Object {
                                      "message": "此处不能为空",
                                      "required": undefined,
                                    },
                                  ]
                                }
                              >
                                <FormItem
                                  label={false}
                                >
                                  <Row
                                    className="ant-form-item"
                                    gutter={0}
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        label={false}
                                        prefixCls="ant-form"
                                      />
                                      <FormItemInput
                                        errors={Array []}
                                        label={false}
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        validateStatus=""
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <FormItem
                                                label={false}
                                                name={
                                                  Array [
                                                    2,
                                                  ]
                                                }
                                                noStyle={true}
                                                rules={
                                                  Array [
                                                    Object {
                                                      "message": "此处不能为空",
                                                      "required": undefined,
                                                    },
                                                  ]
                                                }
                                              >
                                                <Field
                                                  label={false}
                                                  name={
                                                    Array [
                                                      2,
                                                    ]
                                                  }
                                                  noStyle={true}
                                                  onReset={[Function]}
                                                  rules={
                                                    Array [
                                                      Object {
                                                        "message": "此处不能为空",
                                                        "required": undefined,
                                                      },
                                                    ]
                                                  }
                                                  trigger="onChange"
                                                  validateTrigger="onChange"
                                                  valuePropName="value"
                                                >
                                                  <Input
                                                    id="a_2"
                                                    onChange={[Function]}
                                                    placeholder="请输入"
                                                    style={
                                                      Object {
                                                        "display": "inline-block",
                                                        "width": "calc(100% - 0px)",
                                                      }
                                                    }
                                                    type="text"
                                                    value={3}
                                                  >
                                                    <ClearableLabeledInput
                                                      element={
                                                        <input
                                                          className="ant-input"
                                                          id="a_2"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          placeholder="请输入"
                                                          style={
                                                            Object {
                                                              "display": "inline-block",
                                                              "width": "calc(100% - 0px)",
                                                            }
                                                          }
                                                          type="text"
                                                          value={3}
                                                        />
                                                      }
                                                      focused={false}
                                                      handleReset={[Function]}
                                                      id="a_2"
                                                      inputType="input"
                                                      onChange={[Function]}
                                                      placeholder="请输入"
                                                      prefixCls="ant-input"
                                                      style={
                                                        Object {
                                                          "display": "inline-block",
                                                          "width": "calc(100% - 0px)",
                                                        }
                                                      }
                                                      type="text"
                                                      value={3}
                                                    >
                                                      <input
                                                        className="ant-input"
                                                        id="a_2"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder="请输入"
                                                        style={
                                                          Object {
                                                            "display": "inline-block",
                                                            "width": "calc(100% - 0px)",
                                                          }
                                                        }
                                                        type="text"
                                                        value={3}
                                                      />
                                                    </ClearableLabeledInput>
                                                  </Input>
                                                </Field>
                                              </FormItem>
                                              <div
                                                className="padding-icons inline-icons"
                                                style={
                                                  Object {
                                                    "display": "inline-block",
                                                    "width": "0px",
                                                  }
                                                }
                                              />
                                            </div>
                                            <ForwardRef
                                              motionAppear={true}
                                              motionName="show-help"
                                              onLeaveEnd={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <CSSMotion
                                                internalRef={null}
                                                motionAppear={true}
                                                motionEnter={true}
                                                motionLeave={true}
                                                motionName="show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              />
                                            </ForwardRef>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </FormItem>
                              </_default>
                            </Items>
                          </Field>
                        </List>
                      </FormList>
                    </div>
                  </_default>
                </div>
              </Items>
            </div>
          </Items>
        </form>
      </ForwardRef(Form)>
    </SizeContextProvider>
  </ForwardRef(InternalForm)>
</InternalForm>
`;

exports[`YFormItems more children 1`] = `
<InternalForm
  required={true}
>
  <ForwardRef(InternalForm)
    onFinish={[Function]}
  >
    <SizeContextProvider>
      <ForwardRef(Form)
        className="ant-form ant-form-horizontal"
        form={
          Object {
            "__INTERNAL__": Object {
              "name": undefined,
            },
            "getFieldError": [Function],
            "getFieldValue": [Function],
            "getFieldsError": [Function],
            "getFieldsValue": [Function],
            "getInternalHooks": [Function],
            "isFieldTouched": [Function],
            "isFieldValidating": [Function],
            "isFieldsTouched": [Function],
            "isFieldsValidating": [Function],
            "resetFields": [Function],
            "scrollToField": [Function],
            "setFields": [Function],
            "setFieldsValue": [Function],
            "submit": [Function],
            "validateFields": [Function],
          }
        }
        onFinish={[Function]}
      >
        <form
          className="ant-form ant-form-horizontal"
          onSubmit={[Function]}
        >
          <Items>
            <div
              className="yform-items"
            >
              <Items
                plugins={
                  Object {
                    "required": true,
                  }
                }
              >
                <div
                  className="yform-items"
                >
                  <_default
                    key="input"
                    name="input"
                    rules={
                      Array [
                        Object {
                          "message": "此处不能为空",
                          "required": true,
                        },
                      ]
                    }
                  >
                    <FormItem
                      required={true}
                    >
                      <Row
                        className="ant-form-item"
                        gutter={0}
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            prefixCls="ant-form"
                          />
                          <FormItemInput
                            errors={Array []}
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            required={true}
                            validateStatus=""
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <FormItem
                                    name="input"
                                    noStyle={true}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "此处不能为空",
                                          "required": true,
                                        },
                                      ]
                                    }
                                  >
                                    <Field
                                      name="input"
                                      noStyle={true}
                                      onReset={[Function]}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "此处不能为空",
                                            "required": true,
                                          },
                                        ]
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <Input
                                        id="input"
                                        onChange={[Function]}
                                        placeholder="请输入"
                                        type="text"
                                      >
                                        <ClearableLabeledInput
                                          element={
                                            <input
                                              className="ant-input"
                                              id="input"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              placeholder="请输入"
                                              type="text"
                                            />
                                          }
                                          focused={false}
                                          handleReset={[Function]}
                                          id="input"
                                          inputType="input"
                                          onChange={[Function]}
                                          placeholder="请输入"
                                          prefixCls="ant-input"
                                          type="text"
                                          value=""
                                        >
                                          <input
                                            className="ant-input"
                                            id="input"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="请输入"
                                            type="text"
                                            value=""
                                          />
                                        </ClearableLabeledInput>
                                      </Input>
                                    </Field>
                                  </FormItem>
                                </div>
                                <ForwardRef
                                  motionAppear={true}
                                  motionName="show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <CSSMotion
                                    internalRef={null}
                                    motionAppear={true}
                                    motionEnter={true}
                                    motionLeave={true}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  />
                                </ForwardRef>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </_default>
                  <_default
                    items={[Function]}
                    key="list"
                    name="list"
                    type="list"
                  >
                    <div
                      className="list"
                    >
                      <FormList
                        name="list"
                      >
                        <List
                          name="list"
                        >
                          <Field
                            name={Array []}
                            shouldUpdate={[Function]}
                            trigger="onChange"
                            validateTrigger="onChange"
                            valuePropName="value"
                          >
                            <Items>
                              <div
                                className="yform-items"
                              >
                                <_default
                                  key="0"
                                >
                                  <FormItem
                                    required={false}
                                  >
                                    <Row
                                      className="ant-form-item"
                                      gutter={0}
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          prefixCls="ant-form"
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          required={false}
                                          validateStatus=""
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <FormItem
                                                  noStyle={true}
                                                >
                                                  <Button
                                                    block={false}
                                                    ghost={false}
                                                    htmlType="button"
                                                    loading={false}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "width": "100%",
                                                      }
                                                    }
                                                    type="dashed"
                                                  >
                                                    <Wave>
                                                      <button
                                                        className="ant-btn ant-btn-dashed ant-btn-two-chinese-chars"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "width": "100%",
                                                          }
                                                        }
                                                        type="button"
                                                      >
                                                        <ForwardRef(PlusOutlined)
                                                          style={
                                                            Object {
                                                              "paddingRight": 5,
                                                            }
                                                          }
                                                        >
                                                          <ForwardRef(AntdIcon)
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {},
                                                                      "children": Array [
                                                                        Object {
                                                                          "attrs": Object {},
                                                                          "tag": "style",
                                                                        },
                                                                      ],
                                                                      "tag": "defs",
                                                                    },
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "plus",
                                                                "theme": "outlined",
                                                              }
                                                            }
                                                            style={
                                                              Object {
                                                                "paddingRight": 5,
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              aria-label="plus"
                                                              className="anticon anticon-plus"
                                                              role="img"
                                                              style={
                                                                Object {
                                                                  "paddingRight": 5,
                                                                }
                                                              }
                                                            >
                                                              <IconReact
                                                                className=""
                                                                icon={
                                                                  Object {
                                                                    "icon": Object {
                                                                      "attrs": Object {
                                                                        "focusable": "false",
                                                                        "viewBox": "64 64 896 896",
                                                                      },
                                                                      "children": Array [
                                                                        Object {
                                                                          "attrs": Object {},
                                                                          "children": Array [
                                                                            Object {
                                                                              "attrs": Object {},
                                                                              "tag": "style",
                                                                            },
                                                                          ],
                                                                          "tag": "defs",
                                                                        },
                                                                        Object {
                                                                          "attrs": Object {
                                                                            "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                                                                          },
                                                                          "tag": "path",
                                                                        },
                                                                        Object {
                                                                          "attrs": Object {
                                                                            "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                                                                          },
                                                                          "tag": "path",
                                                                        },
                                                                      ],
                                                                      "tag": "svg",
                                                                    },
                                                                    "name": "plus",
                                                                    "theme": "outlined",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  className=""
                                                                  data-icon="plus"
                                                                  fill="currentColor"
                                                                  focusable="false"
                                                                  height="1em"
                                                                  key="svg-plus"
                                                                  viewBox="64 64 896 896"
                                                                  width="1em"
                                                                >
                                                                  <defs
                                                                    key="svg-plus-svg-0"
                                                                  >
                                                                    <style
                                                                      key="svg-plus-svg-0-defs-0"
                                                                    />
                                                                  </defs>
                                                                  <path
                                                                    d="M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z"
                                                                    key="svg-plus-svg-1"
                                                                  />
                                                                  <path
                                                                    d="M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z"
                                                                    key="svg-plus-svg-2"
                                                                  />
                                                                </svg>
                                                              </IconReact>
                                                            </span>
                                                          </ForwardRef(AntdIcon)>
                                                        </ForwardRef(PlusOutlined)>
                                                        添加
                                                      </button>
                                                    </Wave>
                                                  </Button>
                                                </FormItem>
                                              </div>
                                              <ForwardRef
                                                motionAppear={true}
                                                motionName="show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <CSSMotion
                                                  internalRef={null}
                                                  motionAppear={true}
                                                  motionEnter={true}
                                                  motionLeave={true}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                />
                                              </ForwardRef>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </FormItem>
                                </_default>
                              </div>
                            </Items>
                          </Field>
                        </List>
                      </FormList>
                    </div>
                  </_default>
                  <_default
                    key="textarea"
                    label="长文本"
                    name="textarea"
                    rules={
                      Array [
                        Object {
                          "message": "请输入长文本",
                          "required": true,
                        },
                        [Function],
                      ]
                    }
                  >
                    <FormItem
                      label="长文本"
                      required={true}
                    >
                      <Row
                        className="ant-form-item"
                        gutter={0}
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            label="长文本"
                            prefixCls="ant-form"
                          >
                            <Col
                              className="ant-form-item-label"
                            >
                              <div
                                className="ant-col ant-form-item-label"
                                style={Object {}}
                              >
                                <label
                                  className=""
                                  title="长文本"
                                >
                                  长文本
                                </label>
                              </div>
                            </Col>
                          </FormItemLabel>
                          <FormItemInput
                            errors={Array []}
                            label="长文本"
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            required={true}
                            validateStatus=""
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <FormItem
                                    label="长文本"
                                    name="textarea"
                                    noStyle={true}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "请输入长文本",
                                          "required": true,
                                        },
                                        [Function],
                                      ]
                                    }
                                  >
                                    <Field
                                      label="长文本"
                                      name="textarea"
                                      noStyle={true}
                                      onReset={[Function]}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "请输入长文本",
                                            "required": true,
                                          },
                                          [Function],
                                        ]
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <_default
                                        id="textarea"
                                        inputMax={9}
                                        onChange={[Function]}
                                        placeholder="请输入长文本"
                                      >
                                        <div
                                          className="can-input-length"
                                        >
                                          <TextArea
                                            autoSize={
                                              Object {
                                                "maxRows": 6,
                                                "minRows": 3,
                                              }
                                            }
                                            id="textarea"
                                            onChange={[Function]}
                                            placeholder="请输入长文本"
                                          >
                                            <ClearableLabeledInput
                                              autoSize={
                                                Object {
                                                  "maxRows": 6,
                                                  "minRows": 3,
                                                }
                                              }
                                              element={
                                                <ResizableTextArea
                                                  autoSize={
                                                    Object {
                                                      "maxRows": 6,
                                                      "minRows": 3,
                                                    }
                                                  }
                                                  id="textarea"
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="请输入长文本"
                                                  prefixCls="ant-input"
                                                />
                                              }
                                              handleReset={[Function]}
                                              id="textarea"
                                              inputType="text"
                                              onChange={[Function]}
                                              placeholder="请输入长文本"
                                              prefixCls="ant-input"
                                              value=""
                                            >
                                              <ResizableTextArea
                                                autoSize={
                                                  Object {
                                                    "maxRows": 6,
                                                    "minRows": 3,
                                                  }
                                                }
                                                id="textarea"
                                                onChange={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder="请输入长文本"
                                                prefixCls="ant-input"
                                                value=""
                                              >
                                                <ResizeObserver
                                                  disabled={false}
                                                  onResize={[Function]}
                                                >
                                                  <textarea
                                                    className="ant-input"
                                                    id="textarea"
                                                    onChange={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder="请输入长文本"
                                                    style={
                                                      Object {
                                                        "height": -24,
                                                        "maxHeight": -24,
                                                        "minHeight": -12,
                                                        "overflow": "hidden",
                                                        "overflowY": "",
                                                      }
                                                    }
                                                    value=""
                                                  />
                                                </ResizeObserver>
                                              </ResizableTextArea>
                                            </ClearableLabeledInput>
                                          </TextArea>
                                          <div
                                            className="length"
                                          >
                                            0/9
                                          </div>
                                        </div>
                                      </_default>
                                    </Field>
                                  </FormItem>
                                </div>
                                <ForwardRef
                                  motionAppear={true}
                                  motionName="show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <CSSMotion
                                    internalRef={null}
                                    motionAppear={true}
                                    motionEnter={true}
                                    motionLeave={true}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  />
                                </ForwardRef>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </_default>
                  <_default
                    key="单选框"
                    name="单选框"
                    rules={
                      Array [
                        Object {
                          "message": "此处不能为空",
                          "required": true,
                        },
                      ]
                    }
                  >
                    <FormItem
                      required={true}
                    >
                      <Row
                        className="ant-form-item"
                        gutter={0}
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            prefixCls="ant-form"
                          />
                          <FormItemInput
                            errors={Array []}
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            required={true}
                            validateStatus=""
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <FormItem
                                    name="单选框"
                                    noStyle={true}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "此处不能为空",
                                          "required": true,
                                        },
                                      ]
                                    }
                                  >
                                    <Field
                                      name="单选框"
                                      noStyle={true}
                                      onReset={[Function]}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "此处不能为空",
                                            "required": true,
                                          },
                                        ]
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <_default
                                        id="单选框"
                                        onAddProps={[Function]}
                                        onChange={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "id": "1",
                                              "name": "真的",
                                            },
                                          ]
                                        }
                                        placeholder="请输入"
                                      >
                                        <RadioGroup
                                          buttonStyle="outline"
                                          id="单选框"
                                          onChange={[Function]}
                                          placeholder="请输入"
                                        >
                                          <div
                                            className="ant-radio-group ant-radio-group-outline"
                                            id="单选框"
                                          >
                                            <Radio
                                              0="a"
                                              key="1"
                                              type="radio"
                                              value="1"
                                            >
                                              <label
                                                className="ant-radio-wrapper"
                                              >
                                                <Checkbox
                                                  0="a"
                                                  checked={false}
                                                  className=""
                                                  defaultChecked={false}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  prefixCls="ant-radio"
                                                  style={Object {}}
                                                  type="radio"
                                                  value="1"
                                                >
                                                  <span
                                                    className="ant-radio"
                                                    style={Object {}}
                                                  >
                                                    <input
                                                      checked={false}
                                                      className="ant-radio-input"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      type="radio"
                                                      value="1"
                                                    />
                                                    <span
                                                      className="ant-radio-inner"
                                                    />
                                                  </span>
                                                </Checkbox>
                                                <span>
                                                  真的
                                                </span>
                                              </label>
                                            </Radio>
                                          </div>
                                        </RadioGroup>
                                      </_default>
                                    </Field>
                                  </FormItem>
                                </div>
                                <ForwardRef
                                  motionAppear={true}
                                  motionName="show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <CSSMotion
                                    internalRef={null}
                                    motionAppear={true}
                                    motionEnter={true}
                                    motionLeave={true}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  />
                                </ForwardRef>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </_default>
                  <_default
                    key="5"
                    name="单选框"
                    rules={
                      Array [
                        Object {
                          "message": "此处不能为空",
                          "required": true,
                        },
                      ]
                    }
                  >
                    <FormItem
                      required={true}
                    >
                      <Row
                        className="ant-form-item"
                        gutter={0}
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            prefixCls="ant-form"
                          />
                          <FormItemInput
                            errors={Array []}
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            required={true}
                            validateStatus=""
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <FormItem
                                    name="单选框"
                                    noStyle={true}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "此处不能为空",
                                          "required": true,
                                        },
                                      ]
                                    }
                                  >
                                    <Field
                                      name="单选框"
                                      noStyle={true}
                                      onReset={[Function]}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "此处不能为空",
                                            "required": true,
                                          },
                                        ]
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <_default
                                        id="单选框"
                                        onChange={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "id": "1",
                                              "name": "真的",
                                            },
                                          ]
                                        }
                                        placeholder="请输入"
                                        renderOption={[Function]}
                                      >
                                        <RadioGroup
                                          buttonStyle="outline"
                                          id="单选框"
                                          onChange={[Function]}
                                          placeholder="请输入"
                                        >
                                          <div
                                            className="ant-radio-group ant-radio-group-outline"
                                            id="单选框"
                                          >
                                            <Radio
                                              key="1"
                                              type="radio"
                                              value="1"
                                            >
                                              <label
                                                className="ant-radio-wrapper"
                                              >
                                                <Checkbox
                                                  checked={false}
                                                  className=""
                                                  defaultChecked={false}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  prefixCls="ant-radio"
                                                  style={Object {}}
                                                  type="radio"
                                                  value="1"
                                                >
                                                  <span
                                                    className="ant-radio"
                                                    style={Object {}}
                                                  >
                                                    <input
                                                      checked={false}
                                                      className="ant-radio-input"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      type="radio"
                                                      value="1"
                                                    />
                                                    <span
                                                      className="ant-radio-inner"
                                                    />
                                                  </span>
                                                </Checkbox>
                                                <span>
                                                  a
                                                </span>
                                              </label>
                                            </Radio>
                                          </div>
                                        </RadioGroup>
                                      </_default>
                                    </Field>
                                  </FormItem>
                                </div>
                                <ForwardRef
                                  motionAppear={true}
                                  motionName="show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <CSSMotion
                                    internalRef={null}
                                    motionAppear={true}
                                    motionEnter={true}
                                    motionLeave={true}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  />
                                </ForwardRef>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </_default>
                  <_default
                    key="下拉框"
                    label="下拉框"
                    name="下拉框"
                    rules={
                      Array [
                        Object {
                          "message": "请选择下拉框",
                          "required": true,
                        },
                      ]
                    }
                  >
                    <FormItem
                      label="下拉框"
                      required={true}
                    >
                      <Row
                        className="ant-form-item"
                        gutter={0}
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            label="下拉框"
                            prefixCls="ant-form"
                          >
                            <Col
                              className="ant-form-item-label"
                            >
                              <div
                                className="ant-col ant-form-item-label"
                                style={Object {}}
                              >
                                <label
                                  className=""
                                  title="下拉框"
                                >
                                  下拉框
                                </label>
                              </div>
                            </Col>
                          </FormItemLabel>
                          <FormItemInput
                            errors={Array []}
                            label="下拉框"
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            required={true}
                            validateStatus=""
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <FormItem
                                    label="下拉框"
                                    name="下拉框"
                                    noStyle={true}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "请选择下拉框",
                                          "required": true,
                                        },
                                      ]
                                    }
                                  >
                                    <Field
                                      label="下拉框"
                                      name="下拉框"
                                      noStyle={true}
                                      onReset={[Function]}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "请选择下拉框",
                                            "required": true,
                                          },
                                        ]
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <_default
                                        allowClear={true}
                                        filterOption={[Function]}
                                        id="下拉框"
                                        onAddProps={[Function]}
                                        onChange={[Function]}
                                        optionFilterProp="children"
                                        optionLabelProp="checkedValue"
                                        options={
                                          Array [
                                            Object {
                                              "id": "1",
                                              "name": "开",
                                            },
                                            Object {
                                              "id": "2",
                                              "name": "关",
                                            },
                                          ]
                                        }
                                        placeholder="请选择下拉框"
                                        showField={[Function]}
                                        showSearch={true}
                                      >
                                        <Select
                                          allowClear={true}
                                          choiceTransitionName="zoom"
                                          filterOption={[Function]}
                                          id="下拉框"
                                          onChange={[Function]}
                                          optionFilterProp="children"
                                          optionLabelProp="checkedValue"
                                          placeholder="请选择下拉框"
                                          showSearch={true}
                                          transitionName="slide-up"
                                        >
                                          <Select
                                            allowClear={true}
                                            choiceTransitionName="zoom"
                                            className=""
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            dropdownClassName=""
                                            filterOption={[Function]}
                                            id="下拉框"
                                            inputIcon={[Function]}
                                            listHeight={256}
                                            listItemHeight={32}
                                            menuItemSelectedIcon={null}
                                            notFoundContent={
                                              <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>
                                            }
                                            onChange={[Function]}
                                            optionFilterProp="children"
                                            optionLabelProp="checkedValue"
                                            placeholder="请选择下拉框"
                                            prefixCls="ant-select"
                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                            showSearch={true}
                                            transitionName="slide-up"
                                          >
                                            <ForwardRef(Select)
                                              allowClear={true}
                                              choiceTransitionName="zoom"
                                              className=""
                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                              dropdownClassName=""
                                              filterOption={[Function]}
                                              id="下拉框"
                                              inputIcon={[Function]}
                                              listHeight={256}
                                              listItemHeight={32}
                                              menuItemSelectedIcon={null}
                                              notFoundContent={
                                                <Context.Consumer>
                                                  [Function]
                                                </Context.Consumer>
                                              }
                                              onChange={[Function]}
                                              optionFilterProp="children"
                                              optionLabelProp="checkedValue"
                                              placeholder="请选择下拉框"
                                              prefixCls="ant-select"
                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                              showSearch={true}
                                              transitionName="slide-up"
                                            >
                                              <div
                                                className="ant-select ant-select-single ant-select-allow-clear ant-select-show-arrow ant-select-show-search"
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                              >
                                                <SelectTrigger
                                                  containerWidth={0}
                                                  dropdownClassName=""
                                                  empty={false}
                                                  getTriggerDOMNode={[Function]}
                                                  popupElement={
                                                    <ForwardRef(OptionList)
                                                      childrenAsData={true}
                                                      defaultActiveFirstOption={true}
                                                      flattenOptions={
                                                        Array [
                                                          Object {
                                                            "data": Object {
                                                              "checkedValue": "(开)",
                                                              "children": <div>
                                                                <div>
                                                                  1
                                                                </div>
                                                                -
                                                                开
                                                              </div>,
                                                              "disabled": undefined,
                                                              "key": "1",
                                                              "value": "1",
                                                            },
                                                            "groupOption": false,
                                                            "key": "1",
                                                          },
                                                          Object {
                                                            "data": Object {
                                                              "checkedValue": "(关)",
                                                              "children": <div>
                                                                <div>
                                                                  2
                                                                </div>
                                                                -
                                                                关
                                                              </div>,
                                                              "disabled": undefined,
                                                              "key": "2",
                                                              "value": "2",
                                                            },
                                                            "groupOption": false,
                                                            "key": "2",
                                                          },
                                                        ]
                                                      }
                                                      height={256}
                                                      id="下拉框"
                                                      itemHeight={32}
                                                      menuItemSelectedIcon={null}
                                                      multiple={false}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onActiveValue={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "checkedValue": "(开)",
                                                            "children": <div>
                                                              <div>
                                                                1
                                                              </div>
                                                              -
                                                              开
                                                            </div>,
                                                            "disabled": undefined,
                                                            "key": "1",
                                                            "value": "1",
                                                          },
                                                          Object {
                                                            "checkedValue": "(关)",
                                                            "children": <div>
                                                              <div>
                                                                2
                                                              </div>
                                                              -
                                                              关
                                                            </div>,
                                                            "disabled": undefined,
                                                            "key": "2",
                                                            "value": "2",
                                                          },
                                                        ]
                                                      }
                                                      prefixCls="ant-select"
                                                      searchValue=""
                                                      values={Set {}}
                                                    />
                                                  }
                                                  prefixCls="ant-select"
                                                  transitionName="slide-up"
                                                >
                                                  <Trigger
                                                    action={Array []}
                                                    afterPopupVisibleChange={[Function]}
                                                    blurDelay={0.15}
                                                    builtinPlacements={
                                                      Object {
                                                        "bottomLeft": Object {
                                                          "offset": Array [
                                                            0,
                                                            4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "tl",
                                                            "bl",
                                                          ],
                                                        },
                                                        "topLeft": Object {
                                                          "offset": Array [
                                                            0,
                                                            -4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "bl",
                                                            "tl",
                                                          ],
                                                        },
                                                      }
                                                    }
                                                    defaultPopupVisible={false}
                                                    destroyPopupOnHide={false}
                                                    focusDelay={0}
                                                    getDocument={[Function]}
                                                    getPopupClassNameFromAlign={[Function]}
                                                    getTriggerDOMNode={[Function]}
                                                    hideAction={Array []}
                                                    mask={false}
                                                    maskClosable={true}
                                                    mouseEnterDelay={0}
                                                    mouseLeaveDelay={0.1}
                                                    onPopupAlign={[Function]}
                                                    onPopupVisibleChange={[Function]}
                                                    popup={
                                                      <div>
                                                        <ForwardRef(OptionList)
                                                          childrenAsData={true}
                                                          defaultActiveFirstOption={true}
                                                          flattenOptions={
                                                            Array [
                                                              Object {
                                                                "data": Object {
                                                                  "checkedValue": "(开)",
                                                                  "children": <div>
                                                                    <div>
                                                                      1
                                                                    </div>
                                                                    -
                                                                    开
                                                                  </div>,
                                                                  "disabled": undefined,
                                                                  "key": "1",
                                                                  "value": "1",
                                                                },
                                                                "groupOption": false,
                                                                "key": "1",
                                                              },
                                                              Object {
                                                                "data": Object {
                                                                  "checkedValue": "(关)",
                                                                  "children": <div>
                                                                    <div>
                                                                      2
                                                                    </div>
                                                                    -
                                                                    关
                                                                  </div>,
                                                                  "disabled": undefined,
                                                                  "key": "2",
                                                                  "value": "2",
                                                                },
                                                                "groupOption": false,
                                                                "key": "2",
                                                              },
                                                            ]
                                                          }
                                                          height={256}
                                                          id="下拉框"
                                                          itemHeight={32}
                                                          menuItemSelectedIcon={null}
                                                          multiple={false}
                                                          notFoundContent={
                                                            <Context.Consumer>
                                                              [Function]
                                                            </Context.Consumer>
                                                          }
                                                          onActiveValue={[Function]}
                                                          onSelect={[Function]}
                                                          onToggleOpen={[Function]}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "checkedValue": "(开)",
                                                                "children": <div>
                                                                  <div>
                                                                    1
                                                                  </div>
                                                                  -
                                                                  开
                                                                </div>,
                                                                "disabled": undefined,
                                                                "key": "1",
                                                                "value": "1",
                                                              },
                                                              Object {
                                                                "checkedValue": "(关)",
                                                                "children": <div>
                                                                  <div>
                                                                    2
                                                                  </div>
                                                                  -
                                                                  关
                                                                </div>,
                                                                "disabled": undefined,
                                                                "key": "2",
                                                                "value": "2",
                                                              },
                                                            ]
                                                          }
                                                          prefixCls="ant-select"
                                                          searchValue=""
                                                          values={Set {}}
                                                        />
                                                      </div>
                                                    }
                                                    popupAlign={Object {}}
                                                    popupClassName=""
                                                    popupPlacement="bottomLeft"
                                                    popupStyle={
                                                      Object {
                                                        "width": 0,
                                                      }
                                                    }
                                                    popupTransitionName="slide-up"
                                                    prefixCls="ant-select-dropdown"
                                                    showAction={Array []}
                                                  >
                                                    <Selector
                                                      accessibilityIndex={0}
                                                      activeValue={null}
                                                      allowClear={true}
                                                      choiceTransitionName="zoom"
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      domRef={
                                                        Object {
                                                          "current": <div
                                                            class="ant-select-selector"
                                                          >
                                                            <span
                                                              class="ant-select-selection-search"
                                                            >
                                                              <input
                                                                aria-activedescendant="下拉框_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="下拉框_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="下拉框_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="下拉框"
                                                                readonly=""
                                                                role="combobox"
                                                                style="opacity: 0;"
                                                                value=""
                                                              />
                                                            </span>
                                                            <span
                                                              class="ant-select-selection-placeholder"
                                                            >
                                                              请选择下拉框
                                                            </span>
                                                          </div>,
                                                        }
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      id="下拉框"
                                                      inputElement={null}
                                                      inputIcon={[Function]}
                                                      key="trigger"
                                                      listHeight={256}
                                                      listItemHeight={32}
                                                      menuItemSelectedIcon={null}
                                                      multiple={false}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onSearch={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      optionFilterProp="children"
                                                      optionLabelProp="checkedValue"
                                                      placeholder="请选择下拉框"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      searchValue=""
                                                      showSearch={true}
                                                      transitionName="slide-up"
                                                      values={Array []}
                                                    >
                                                      <div
                                                        className="ant-select-selector"
                                                        onClick={[Function]}
                                                        onMouseDown={[Function]}
                                                      >
                                                        <SingleSelector
                                                          accessibilityIndex={0}
                                                          activeValue={null}
                                                          allowClear={true}
                                                          choiceTransitionName="zoom"
                                                          className=""
                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                          domRef={
                                                            Object {
                                                              "current": <div
                                                                class="ant-select-selector"
                                                              >
                                                                <span
                                                                  class="ant-select-selection-search"
                                                                >
                                                                  <input
                                                                    aria-activedescendant="下拉框_list_0"
                                                                    aria-autocomplete="list"
                                                                    aria-controls="下拉框_list"
                                                                    aria-haspopup="listbox"
                                                                    aria-owns="下拉框_list"
                                                                    autocomplete="off"
                                                                    class="ant-select-selection-search-input"
                                                                    id="下拉框"
                                                                    readonly=""
                                                                    role="combobox"
                                                                    style="opacity: 0;"
                                                                    value=""
                                                                  />
                                                                </span>
                                                                <span
                                                                  class="ant-select-selection-placeholder"
                                                                >
                                                                  请选择下拉框
                                                                </span>
                                                              </div>,
                                                            }
                                                          }
                                                          dropdownClassName=""
                                                          filterOption={[Function]}
                                                          id="下拉框"
                                                          inputElement={null}
                                                          inputIcon={[Function]}
                                                          inputRef={
                                                            Object {
                                                              "current": <input
                                                                aria-activedescendant="下拉框_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="下拉框_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="下拉框_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="下拉框"
                                                                readonly=""
                                                                role="combobox"
                                                                style="opacity: 0;"
                                                                value=""
                                                              />,
                                                            }
                                                          }
                                                          listHeight={256}
                                                          listItemHeight={32}
                                                          menuItemSelectedIcon={null}
                                                          multiple={false}
                                                          notFoundContent={
                                                            <Context.Consumer>
                                                              [Function]
                                                            </Context.Consumer>
                                                          }
                                                          onChange={[Function]}
                                                          onInputChange={[Function]}
                                                          onInputKeyDown={[Function]}
                                                          onInputMouseDown={[Function]}
                                                          onSearch={[Function]}
                                                          onSelect={[Function]}
                                                          onToggleOpen={[Function]}
                                                          optionFilterProp="children"
                                                          optionLabelProp="checkedValue"
                                                          placeholder="请选择下拉框"
                                                          prefixCls="ant-select"
                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                          searchValue=""
                                                          showSearch={true}
                                                          transitionName="slide-up"
                                                          values={Array []}
                                                        >
                                                          <span
                                                            className="ant-select-selection-search"
                                                          >
                                                            <Input
                                                              accessibilityIndex={0}
                                                              id="下拉框"
                                                              inputElement={null}
                                                              onChange={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              prefixCls="ant-select"
                                                              value=""
                                                            >
                                                              <input
                                                                aria-activedescendant="下拉框_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="下拉框_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="下拉框_list"
                                                                autoComplete="off"
                                                                className="ant-select-selection-search-input"
                                                                id="下拉框"
                                                                onChange={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseDown={[Function]}
                                                                readOnly={true}
                                                                role="combobox"
                                                                style={
                                                                  Object {
                                                                    "opacity": 0,
                                                                  }
                                                                }
                                                                value=""
                                                              />
                                                            </Input>
                                                          </span>
                                                          <span
                                                            className="ant-select-selection-placeholder"
                                                          >
                                                            请选择下拉框
                                                          </span>
                                                        </SingleSelector>
                                                      </div>
                                                    </Selector>
                                                  </Trigger>
                                                </SelectTrigger>
                                                <TransBtn
                                                  className="ant-select-arrow"
                                                  customizeIcon={[Function]}
                                                  customizeIconProps={
                                                    Object {
                                                      "focused": false,
                                                      "loading": undefined,
                                                      "open": undefined,
                                                      "searchValue": "",
                                                      "showSearch": true,
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-hidden={true}
                                                    className="ant-select-arrow"
                                                    onMouseDown={[Function]}
                                                    style={
                                                      Object {
                                                        "WebkitUserSelect": "none",
                                                        "userSelect": "none",
                                                      }
                                                    }
                                                    unselectable="on"
                                                  >
                                                    <ForwardRef(DownOutlined)>
                                                      <ForwardRef(AntdIcon)
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "down",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-label="down"
                                                          className="anticon anticon-down"
                                                          role="img"
                                                        >
                                                          <IconReact
                                                            className=""
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "down",
                                                                "theme": "outlined",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className=""
                                                              data-icon="down"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height="1em"
                                                              key="svg-down"
                                                              viewBox="64 64 896 896"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                key="svg-down-svg-0"
                                                              />
                                                            </svg>
                                                          </IconReact>
                                                        </span>
                                                      </ForwardRef(AntdIcon)>
                                                    </ForwardRef(DownOutlined)>
                                                  </span>
                                                </TransBtn>
                                              </div>
                                            </ForwardRef(Select)>
                                          </Select>
                                        </Select>
                                      </_default>
                                    </Field>
                                  </FormItem>
                                </div>
                                <ForwardRef
                                  motionAppear={true}
                                  motionName="show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <CSSMotion
                                    internalRef={null}
                                    motionAppear={true}
                                    motionEnter={true}
                                    motionLeave={true}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  />
                                </ForwardRef>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </_default>
                  <_default
                    key="7"
                    label="下拉框"
                    name="下拉框"
                    rules={
                      Array [
                        Object {
                          "message": "请选择下拉框",
                          "required": true,
                        },
                      ]
                    }
                  >
                    <FormItem
                      label="下拉框"
                      required={true}
                    >
                      <Row
                        className="ant-form-item"
                        gutter={0}
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            label="下拉框"
                            prefixCls="ant-form"
                          >
                            <Col
                              className="ant-form-item-label"
                            >
                              <div
                                className="ant-col ant-form-item-label"
                                style={Object {}}
                              >
                                <label
                                  className=""
                                  title="下拉框"
                                >
                                  下拉框
                                </label>
                              </div>
                            </Col>
                          </FormItemLabel>
                          <FormItemInput
                            errors={Array []}
                            label="下拉框"
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            required={true}
                            validateStatus=""
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <FormItem
                                    label="下拉框"
                                    name="下拉框"
                                    noStyle={true}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "请选择下拉框",
                                          "required": true,
                                        },
                                      ]
                                    }
                                  >
                                    <Field
                                      label="下拉框"
                                      name="下拉框"
                                      noStyle={true}
                                      onReset={[Function]}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "请选择下拉框",
                                            "required": true,
                                          },
                                        ]
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <_default
                                        allowClear={true}
                                        filterOption={[Function]}
                                        id="下拉框"
                                        onChange={[Function]}
                                        optionFilterProp="children"
                                        optionLabelProp="checkedValue"
                                        options={
                                          Array [
                                            Object {
                                              "id": "1",
                                              "name": "开",
                                            },
                                          ]
                                        }
                                        placeholder="请选择下拉框"
                                        renderOption={[Function]}
                                        showSearch={true}
                                      >
                                        <Select
                                          allowClear={true}
                                          choiceTransitionName="zoom"
                                          filterOption={[Function]}
                                          id="下拉框"
                                          onChange={[Function]}
                                          optionFilterProp="children"
                                          optionLabelProp="checkedValue"
                                          placeholder="请选择下拉框"
                                          showSearch={true}
                                          transitionName="slide-up"
                                        >
                                          <Select
                                            allowClear={true}
                                            choiceTransitionName="zoom"
                                            className=""
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            dropdownClassName=""
                                            filterOption={[Function]}
                                            id="下拉框"
                                            inputIcon={[Function]}
                                            listHeight={256}
                                            listItemHeight={32}
                                            menuItemSelectedIcon={null}
                                            notFoundContent={
                                              <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>
                                            }
                                            onChange={[Function]}
                                            optionFilterProp="children"
                                            optionLabelProp="checkedValue"
                                            placeholder="请选择下拉框"
                                            prefixCls="ant-select"
                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                            showSearch={true}
                                            transitionName="slide-up"
                                          >
                                            <ForwardRef(Select)
                                              allowClear={true}
                                              choiceTransitionName="zoom"
                                              className=""
                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                              dropdownClassName=""
                                              filterOption={[Function]}
                                              id="下拉框"
                                              inputIcon={[Function]}
                                              listHeight={256}
                                              listItemHeight={32}
                                              menuItemSelectedIcon={null}
                                              notFoundContent={
                                                <Context.Consumer>
                                                  [Function]
                                                </Context.Consumer>
                                              }
                                              onChange={[Function]}
                                              optionFilterProp="children"
                                              optionLabelProp="checkedValue"
                                              placeholder="请选择下拉框"
                                              prefixCls="ant-select"
                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                              showSearch={true}
                                              transitionName="slide-up"
                                            >
                                              <div
                                                className="ant-select ant-select-single ant-select-allow-clear ant-select-show-arrow ant-select-show-search"
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                              >
                                                <SelectTrigger
                                                  containerWidth={0}
                                                  dropdownClassName=""
                                                  empty={false}
                                                  getTriggerDOMNode={[Function]}
                                                  popupElement={
                                                    <ForwardRef(OptionList)
                                                      childrenAsData={true}
                                                      defaultActiveFirstOption={true}
                                                      flattenOptions={
                                                        Array [
                                                          Object {
                                                            "data": Object {
                                                              "children": "a",
                                                              "disabled": undefined,
                                                              "key": "1",
                                                              "value": "1",
                                                            },
                                                            "groupOption": false,
                                                            "key": "1",
                                                          },
                                                        ]
                                                      }
                                                      height={256}
                                                      id="下拉框"
                                                      itemHeight={32}
                                                      menuItemSelectedIcon={null}
                                                      multiple={false}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onActiveValue={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "children": "a",
                                                            "disabled": undefined,
                                                            "key": "1",
                                                            "value": "1",
                                                          },
                                                        ]
                                                      }
                                                      prefixCls="ant-select"
                                                      searchValue=""
                                                      values={Set {}}
                                                    />
                                                  }
                                                  prefixCls="ant-select"
                                                  transitionName="slide-up"
                                                >
                                                  <Trigger
                                                    action={Array []}
                                                    afterPopupVisibleChange={[Function]}
                                                    blurDelay={0.15}
                                                    builtinPlacements={
                                                      Object {
                                                        "bottomLeft": Object {
                                                          "offset": Array [
                                                            0,
                                                            4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "tl",
                                                            "bl",
                                                          ],
                                                        },
                                                        "topLeft": Object {
                                                          "offset": Array [
                                                            0,
                                                            -4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "bl",
                                                            "tl",
                                                          ],
                                                        },
                                                      }
                                                    }
                                                    defaultPopupVisible={false}
                                                    destroyPopupOnHide={false}
                                                    focusDelay={0}
                                                    getDocument={[Function]}
                                                    getPopupClassNameFromAlign={[Function]}
                                                    getTriggerDOMNode={[Function]}
                                                    hideAction={Array []}
                                                    mask={false}
                                                    maskClosable={true}
                                                    mouseEnterDelay={0}
                                                    mouseLeaveDelay={0.1}
                                                    onPopupAlign={[Function]}
                                                    onPopupVisibleChange={[Function]}
                                                    popup={
                                                      <div>
                                                        <ForwardRef(OptionList)
                                                          childrenAsData={true}
                                                          defaultActiveFirstOption={true}
                                                          flattenOptions={
                                                            Array [
                                                              Object {
                                                                "data": Object {
                                                                  "children": "a",
                                                                  "disabled": undefined,
                                                                  "key": "1",
                                                                  "value": "1",
                                                                },
                                                                "groupOption": false,
                                                                "key": "1",
                                                              },
                                                            ]
                                                          }
                                                          height={256}
                                                          id="下拉框"
                                                          itemHeight={32}
                                                          menuItemSelectedIcon={null}
                                                          multiple={false}
                                                          notFoundContent={
                                                            <Context.Consumer>
                                                              [Function]
                                                            </Context.Consumer>
                                                          }
                                                          onActiveValue={[Function]}
                                                          onSelect={[Function]}
                                                          onToggleOpen={[Function]}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "children": "a",
                                                                "disabled": undefined,
                                                                "key": "1",
                                                                "value": "1",
                                                              },
                                                            ]
                                                          }
                                                          prefixCls="ant-select"
                                                          searchValue=""
                                                          values={Set {}}
                                                        />
                                                      </div>
                                                    }
                                                    popupAlign={Object {}}
                                                    popupClassName=""
                                                    popupPlacement="bottomLeft"
                                                    popupStyle={
                                                      Object {
                                                        "width": 0,
                                                      }
                                                    }
                                                    popupTransitionName="slide-up"
                                                    prefixCls="ant-select-dropdown"
                                                    showAction={Array []}
                                                  >
                                                    <Selector
                                                      accessibilityIndex={0}
                                                      activeValue={null}
                                                      allowClear={true}
                                                      choiceTransitionName="zoom"
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      domRef={
                                                        Object {
                                                          "current": <div
                                                            class="ant-select-selector"
                                                          >
                                                            <span
                                                              class="ant-select-selection-search"
                                                            >
                                                              <input
                                                                aria-activedescendant="下拉框_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="下拉框_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="下拉框_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="下拉框"
                                                                readonly=""
                                                                role="combobox"
                                                                style="opacity: 0;"
                                                                value=""
                                                              />
                                                            </span>
                                                            <span
                                                              class="ant-select-selection-placeholder"
                                                            >
                                                              请选择下拉框
                                                            </span>
                                                          </div>,
                                                        }
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      id="下拉框"
                                                      inputElement={null}
                                                      inputIcon={[Function]}
                                                      key="trigger"
                                                      listHeight={256}
                                                      listItemHeight={32}
                                                      menuItemSelectedIcon={null}
                                                      multiple={false}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      onChange={[Function]}
                                                      onSearch={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      optionFilterProp="children"
                                                      optionLabelProp="checkedValue"
                                                      placeholder="请选择下拉框"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      searchValue=""
                                                      showSearch={true}
                                                      transitionName="slide-up"
                                                      values={Array []}
                                                    >
                                                      <div
                                                        className="ant-select-selector"
                                                        onClick={[Function]}
                                                        onMouseDown={[Function]}
                                                      >
                                                        <SingleSelector
                                                          accessibilityIndex={0}
                                                          activeValue={null}
                                                          allowClear={true}
                                                          choiceTransitionName="zoom"
                                                          className=""
                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                          domRef={
                                                            Object {
                                                              "current": <div
                                                                class="ant-select-selector"
                                                              >
                                                                <span
                                                                  class="ant-select-selection-search"
                                                                >
                                                                  <input
                                                                    aria-activedescendant="下拉框_list_0"
                                                                    aria-autocomplete="list"
                                                                    aria-controls="下拉框_list"
                                                                    aria-haspopup="listbox"
                                                                    aria-owns="下拉框_list"
                                                                    autocomplete="off"
                                                                    class="ant-select-selection-search-input"
                                                                    id="下拉框"
                                                                    readonly=""
                                                                    role="combobox"
                                                                    style="opacity: 0;"
                                                                    value=""
                                                                  />
                                                                </span>
                                                                <span
                                                                  class="ant-select-selection-placeholder"
                                                                >
                                                                  请选择下拉框
                                                                </span>
                                                              </div>,
                                                            }
                                                          }
                                                          dropdownClassName=""
                                                          filterOption={[Function]}
                                                          id="下拉框"
                                                          inputElement={null}
                                                          inputIcon={[Function]}
                                                          inputRef={
                                                            Object {
                                                              "current": <input
                                                                aria-activedescendant="下拉框_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="下拉框_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="下拉框_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="下拉框"
                                                                readonly=""
                                                                role="combobox"
                                                                style="opacity: 0;"
                                                                value=""
                                                              />,
                                                            }
                                                          }
                                                          listHeight={256}
                                                          listItemHeight={32}
                                                          menuItemSelectedIcon={null}
                                                          multiple={false}
                                                          notFoundContent={
                                                            <Context.Consumer>
                                                              [Function]
                                                            </Context.Consumer>
                                                          }
                                                          onChange={[Function]}
                                                          onInputChange={[Function]}
                                                          onInputKeyDown={[Function]}
                                                          onInputMouseDown={[Function]}
                                                          onSearch={[Function]}
                                                          onSelect={[Function]}
                                                          onToggleOpen={[Function]}
                                                          optionFilterProp="children"
                                                          optionLabelProp="checkedValue"
                                                          placeholder="请选择下拉框"
                                                          prefixCls="ant-select"
                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                          searchValue=""
                                                          showSearch={true}
                                                          transitionName="slide-up"
                                                          values={Array []}
                                                        >
                                                          <span
                                                            className="ant-select-selection-search"
                                                          >
                                                            <Input
                                                              accessibilityIndex={0}
                                                              id="下拉框"
                                                              inputElement={null}
                                                              onChange={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              prefixCls="ant-select"
                                                              value=""
                                                            >
                                                              <input
                                                                aria-activedescendant="下拉框_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="下拉框_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="下拉框_list"
                                                                autoComplete="off"
                                                                className="ant-select-selection-search-input"
                                                                id="下拉框"
                                                                onChange={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseDown={[Function]}
                                                                readOnly={true}
                                                                role="combobox"
                                                                style={
                                                                  Object {
                                                                    "opacity": 0,
                                                                  }
                                                                }
                                                                value=""
                                                              />
                                                            </Input>
                                                          </span>
                                                          <span
                                                            className="ant-select-selection-placeholder"
                                                          >
                                                            请选择下拉框
                                                          </span>
                                                        </SingleSelector>
                                                      </div>
                                                    </Selector>
                                                  </Trigger>
                                                </SelectTrigger>
                                                <TransBtn
                                                  className="ant-select-arrow"
                                                  customizeIcon={[Function]}
                                                  customizeIconProps={
                                                    Object {
                                                      "focused": false,
                                                      "loading": undefined,
                                                      "open": undefined,
                                                      "searchValue": "",
                                                      "showSearch": true,
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-hidden={true}
                                                    className="ant-select-arrow"
                                                    onMouseDown={[Function]}
                                                    style={
                                                      Object {
                                                        "WebkitUserSelect": "none",
                                                        "userSelect": "none",
                                                      }
                                                    }
                                                    unselectable="on"
                                                  >
                                                    <ForwardRef(DownOutlined)>
                                                      <ForwardRef(AntdIcon)
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "down",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-label="down"
                                                          className="anticon anticon-down"
                                                          role="img"
                                                        >
                                                          <IconReact
                                                            className=""
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "down",
                                                                "theme": "outlined",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className=""
                                                              data-icon="down"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height="1em"
                                                              key="svg-down"
                                                              viewBox="64 64 896 896"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                key="svg-down-svg-0"
                                                              />
                                                            </svg>
                                                          </IconReact>
                                                        </span>
                                                      </ForwardRef(AntdIcon)>
                                                    </ForwardRef(DownOutlined)>
                                                  </span>
                                                </TransBtn>
                                              </div>
                                            </ForwardRef(Select)>
                                          </Select>
                                        </Select>
                                      </_default>
                                    </Field>
                                  </FormItem>
                                </div>
                                <ForwardRef
                                  motionAppear={true}
                                  motionName="show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <CSSMotion
                                    internalRef={null}
                                    motionAppear={true}
                                    motionEnter={true}
                                    motionLeave={true}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  />
                                </ForwardRef>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </_default>
                  <_default
                    key="8"
                    shouldUpdate={true}
                  >
                    <FormItem
                      required={false}
                    >
                      <Row
                        className="ant-form-item"
                        gutter={0}
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            prefixCls="ant-form"
                          />
                          <FormItemInput
                            errors={Array []}
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            required={false}
                            validateStatus=""
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <FormItem
                                    noStyle={true}
                                    shouldUpdate={true}
                                  >
                                    <Field
                                      noStyle={true}
                                      onReset={[Function]}
                                      shouldUpdate={true}
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <Items
                                        noStyle={true}
                                      >
                                        <_default
                                          key="f"
                                          name="f"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "此处不能为空",
                                                "required": true,
                                              },
                                            ]
                                          }
                                        >
                                          <FormItem
                                            required={true}
                                          >
                                            <Row
                                              className="ant-form-item"
                                              gutter={0}
                                              key="row"
                                            >
                                              <div
                                                className="ant-row ant-form-item"
                                                style={Object {}}
                                              >
                                                <FormItemLabel
                                                  prefixCls="ant-form"
                                                />
                                                <FormItemInput
                                                  errors={Array []}
                                                  onDomErrorVisibleChange={[Function]}
                                                  prefixCls="ant-form"
                                                  required={true}
                                                  validateStatus=""
                                                >
                                                  <Col
                                                    className="ant-form-item-control"
                                                  >
                                                    <div
                                                      className="ant-col ant-form-item-control"
                                                      style={Object {}}
                                                    >
                                                      <div
                                                        className="ant-form-item-control-input"
                                                      >
                                                        <FormItem
                                                          name="f"
                                                          noStyle={true}
                                                          rules={
                                                            Array [
                                                              Object {
                                                                "message": "此处不能为空",
                                                                "required": true,
                                                              },
                                                            ]
                                                          }
                                                        >
                                                          <Field
                                                            name="f"
                                                            noStyle={true}
                                                            onReset={[Function]}
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "此处不能为空",
                                                                  "required": true,
                                                                },
                                                              ]
                                                            }
                                                            trigger="onChange"
                                                            validateTrigger="onChange"
                                                            valuePropName="value"
                                                          >
                                                            <Input
                                                              id="f"
                                                              onChange={[Function]}
                                                              placeholder="请输入"
                                                              type="text"
                                                            >
                                                              <ClearableLabeledInput
                                                                element={
                                                                  <input
                                                                    className="ant-input"
                                                                    id="f"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    placeholder="请输入"
                                                                    type="text"
                                                                  />
                                                                }
                                                                focused={false}
                                                                handleReset={[Function]}
                                                                id="f"
                                                                inputType="input"
                                                                onChange={[Function]}
                                                                placeholder="请输入"
                                                                prefixCls="ant-input"
                                                                type="text"
                                                                value=""
                                                              >
                                                                <input
                                                                  className="ant-input"
                                                                  id="f"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  placeholder="请输入"
                                                                  type="text"
                                                                  value=""
                                                                />
                                                              </ClearableLabeledInput>
                                                            </Input>
                                                          </Field>
                                                        </FormItem>
                                                      </div>
                                                      <ForwardRef
                                                        motionAppear={true}
                                                        motionName="show-help"
                                                        onLeaveEnd={[Function]}
                                                        removeOnLeave={true}
                                                        visible={false}
                                                      >
                                                        <CSSMotion
                                                          internalRef={null}
                                                          motionAppear={true}
                                                          motionEnter={true}
                                                          motionLeave={true}
                                                          motionName="show-help"
                                                          onLeaveEnd={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        />
                                                      </ForwardRef>
                                                    </div>
                                                  </Col>
                                                </FormItemInput>
                                              </div>
                                            </Row>
                                          </FormItem>
                                        </_default>
                                      </Items>
                                    </Field>
                                  </FormItem>
                                </div>
                                <ForwardRef
                                  motionAppear={true}
                                  motionName="show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <CSSMotion
                                    internalRef={null}
                                    motionAppear={true}
                                    motionEnter={true}
                                    motionLeave={true}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  />
                                </ForwardRef>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </_default>
                  <_default
                    key="checkbox"
                    name="checkbox"
                    rules={
                      Array [
                        Object {
                          "message": "此处不能为空",
                          "required": true,
                        },
                      ]
                    }
                    valuePropName="checked"
                  >
                    <FormItem
                      required={true}
                      valuePropName="checked"
                    >
                      <Row
                        className="ant-form-item"
                        gutter={0}
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            prefixCls="ant-form"
                            valuePropName="checked"
                          />
                          <FormItemInput
                            errors={Array []}
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            required={true}
                            validateStatus=""
                            valuePropName="checked"
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <FormItem
                                    name="checkbox"
                                    noStyle={true}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "此处不能为空",
                                          "required": true,
                                        },
                                      ]
                                    }
                                    valuePropName="checked"
                                  >
                                    <Field
                                      name="checkbox"
                                      noStyle={true}
                                      onReset={[Function]}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "此处不能为空",
                                            "required": true,
                                          },
                                        ]
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="checked"
                                    >
                                      <Checkbox
                                        id="checkbox"
                                        indeterminate={false}
                                        onChange={[Function]}
                                        placeholder="请输入"
                                      >
                                        <label
                                          className="ant-checkbox-wrapper"
                                        >
                                          <Checkbox
                                            className=""
                                            defaultChecked={false}
                                            id="checkbox"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            placeholder="请输入"
                                            prefixCls="ant-checkbox"
                                            style={Object {}}
                                            type="checkbox"
                                          >
                                            <span
                                              className="ant-checkbox"
                                              style={Object {}}
                                            >
                                              <input
                                                checked={false}
                                                className="ant-checkbox-input"
                                                id="checkbox"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                type="checkbox"
                                              />
                                              <span
                                                className="ant-checkbox-inner"
                                              />
                                            </span>
                                          </Checkbox>
                                        </label>
                                      </Checkbox>
                                    </Field>
                                  </FormItem>
                                </div>
                                <ForwardRef
                                  motionAppear={true}
                                  motionName="show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <CSSMotion
                                    internalRef={null}
                                    motionAppear={true}
                                    motionEnter={true}
                                    motionLeave={true}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  />
                                </ForwardRef>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </_default>
                  <_default
                    key="checkboxGroup"
                    name="checkboxGroup"
                    rules={
                      Array [
                        Object {
                          "message": "此处不能为空",
                          "required": true,
                        },
                      ]
                    }
                  >
                    <FormItem
                      required={true}
                    >
                      <Row
                        className="ant-form-item"
                        gutter={0}
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            prefixCls="ant-form"
                          />
                          <FormItemInput
                            errors={Array []}
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            required={true}
                            validateStatus=""
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <FormItem
                                    name="checkboxGroup"
                                    noStyle={true}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "此处不能为空",
                                          "required": true,
                                        },
                                      ]
                                    }
                                  >
                                    <Field
                                      name="checkboxGroup"
                                      noStyle={true}
                                      onReset={[Function]}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "此处不能为空",
                                            "required": true,
                                          },
                                        ]
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <_default
                                        id="checkboxGroup"
                                        onAddProps={[Function]}
                                        onChange={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "id": "1",
                                              "name": "a",
                                            },
                                          ]
                                        }
                                        placeholder="请输入"
                                      >
                                        <CheckboxGroup
                                          id="checkboxGroup"
                                          onChange={[Function]}
                                          options={Array []}
                                          placeholder="请输入"
                                        >
                                          <div
                                            className="ant-checkbox-group"
                                            id="checkboxGroup"
                                            placeholder="请输入"
                                          >
                                            <Checkbox
                                              0="a"
                                              indeterminate={false}
                                              key="1"
                                              value="1"
                                            >
                                              <label
                                                className="ant-checkbox-wrapper"
                                              >
                                                <Checkbox
                                                  0="a"
                                                  checked={false}
                                                  className=""
                                                  defaultChecked={false}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  prefixCls="ant-checkbox"
                                                  style={Object {}}
                                                  type="checkbox"
                                                  value="1"
                                                >
                                                  <span
                                                    className="ant-checkbox"
                                                    style={Object {}}
                                                  >
                                                    <input
                                                      checked={false}
                                                      className="ant-checkbox-input"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      type="checkbox"
                                                      value="1"
                                                    />
                                                    <span
                                                      className="ant-checkbox-inner"
                                                    />
                                                  </span>
                                                </Checkbox>
                                                <span>
                                                  a
                                                </span>
                                              </label>
                                            </Checkbox>
                                          </div>
                                        </CheckboxGroup>
                                      </_default>
                                    </Field>
                                  </FormItem>
                                </div>
                                <ForwardRef
                                  motionAppear={true}
                                  motionName="show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <CSSMotion
                                    internalRef={null}
                                    motionAppear={true}
                                    motionEnter={true}
                                    motionLeave={true}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  />
                                </ForwardRef>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </_default>
                  <_default
                    key="checkboxGroup2"
                    name="checkboxGroup2"
                    rules={
                      Array [
                        Object {
                          "message": "此处不能为空",
                          "required": true,
                        },
                      ]
                    }
                  >
                    <FormItem
                      required={true}
                    >
                      <Row
                        className="ant-form-item"
                        gutter={0}
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            prefixCls="ant-form"
                          />
                          <FormItemInput
                            errors={Array []}
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            required={true}
                            validateStatus=""
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <FormItem
                                    name="checkboxGroup2"
                                    noStyle={true}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "此处不能为空",
                                          "required": true,
                                        },
                                      ]
                                    }
                                  >
                                    <Field
                                      name="checkboxGroup2"
                                      noStyle={true}
                                      onReset={[Function]}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "此处不能为空",
                                            "required": true,
                                          },
                                        ]
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <_default
                                        id="checkboxGroup2"
                                        onChange={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "id": "1",
                                              "name": "a",
                                            },
                                          ]
                                        }
                                        placeholder="请输入"
                                        renderOption={[Function]}
                                      >
                                        <CheckboxGroup
                                          id="checkboxGroup2"
                                          onChange={[Function]}
                                          options={Array []}
                                          placeholder="请输入"
                                        >
                                          <div
                                            className="ant-checkbox-group"
                                            id="checkboxGroup2"
                                            placeholder="请输入"
                                          >
                                            <Checkbox
                                              indeterminate={false}
                                              key="1"
                                              value="1"
                                            >
                                              <label
                                                className="ant-checkbox-wrapper"
                                              >
                                                <Checkbox
                                                  checked={false}
                                                  className=""
                                                  defaultChecked={false}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  prefixCls="ant-checkbox"
                                                  style={Object {}}
                                                  type="checkbox"
                                                  value="1"
                                                >
                                                  <span
                                                    className="ant-checkbox"
                                                    style={Object {}}
                                                  >
                                                    <input
                                                      checked={false}
                                                      className="ant-checkbox-input"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      type="checkbox"
                                                      value="1"
                                                    />
                                                    <span
                                                      className="ant-checkbox-inner"
                                                    />
                                                  </span>
                                                </Checkbox>
                                                <span>
                                                  b
                                                </span>
                                              </label>
                                            </Checkbox>
                                          </div>
                                        </CheckboxGroup>
                                      </_default>
                                    </Field>
                                  </FormItem>
                                </div>
                                <ForwardRef
                                  motionAppear={true}
                                  motionName="show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <CSSMotion
                                    internalRef={null}
                                    motionAppear={true}
                                    motionEnter={true}
                                    motionLeave={true}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  />
                                </ForwardRef>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </_default>
                  <_default
                    items={[Function]}
                    key="12"
                    type="list"
                  >
                    <div
                      className="list"
                    >
                      <FormList
                        name=""
                      >
                        <List
                          name=""
                        >
                          <Field
                            name={Array []}
                            shouldUpdate={[Function]}
                            trigger="onChange"
                            validateTrigger="onChange"
                            valuePropName="value"
                          >
                            <Items>
                              <div
                                className="yform-items"
                              >
                                <_default
                                  key="0"
                                >
                                  <FormItem
                                    required={false}
                                  >
                                    <Row
                                      className="ant-form-item"
                                      gutter={0}
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          prefixCls="ant-form"
                                        />
                                        <FormItemInput
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          required={false}
                                          validateStatus=""
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <FormItem
                                                  noStyle={true}
                                                >
                                                  <Button
                                                    block={false}
                                                    ghost={false}
                                                    htmlType="button"
                                                    loading={false}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "width": "100%",
                                                      }
                                                    }
                                                    type="dashed"
                                                  >
                                                    <Wave>
                                                      <button
                                                        className="ant-btn ant-btn-dashed ant-btn-two-chinese-chars"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "width": "100%",
                                                          }
                                                        }
                                                        type="button"
                                                      >
                                                        <ForwardRef(PlusOutlined)
                                                          style={
                                                            Object {
                                                              "paddingRight": 5,
                                                            }
                                                          }
                                                        >
                                                          <ForwardRef(AntdIcon)
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {},
                                                                      "children": Array [
                                                                        Object {
                                                                          "attrs": Object {},
                                                                          "tag": "style",
                                                                        },
                                                                      ],
                                                                      "tag": "defs",
                                                                    },
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "plus",
                                                                "theme": "outlined",
                                                              }
                                                            }
                                                            style={
                                                              Object {
                                                                "paddingRight": 5,
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              aria-label="plus"
                                                              className="anticon anticon-plus"
                                                              role="img"
                                                              style={
                                                                Object {
                                                                  "paddingRight": 5,
                                                                }
                                                              }
                                                            >
                                                              <IconReact
                                                                className=""
                                                                icon={
                                                                  Object {
                                                                    "icon": Object {
                                                                      "attrs": Object {
                                                                        "focusable": "false",
                                                                        "viewBox": "64 64 896 896",
                                                                      },
                                                                      "children": Array [
                                                                        Object {
                                                                          "attrs": Object {},
                                                                          "children": Array [
                                                                            Object {
                                                                              "attrs": Object {},
                                                                              "tag": "style",
                                                                            },
                                                                          ],
                                                                          "tag": "defs",
                                                                        },
                                                                        Object {
                                                                          "attrs": Object {
                                                                            "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                                                                          },
                                                                          "tag": "path",
                                                                        },
                                                                        Object {
                                                                          "attrs": Object {
                                                                            "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                                                                          },
                                                                          "tag": "path",
                                                                        },
                                                                      ],
                                                                      "tag": "svg",
                                                                    },
                                                                    "name": "plus",
                                                                    "theme": "outlined",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  className=""
                                                                  data-icon="plus"
                                                                  fill="currentColor"
                                                                  focusable="false"
                                                                  height="1em"
                                                                  key="svg-plus"
                                                                  viewBox="64 64 896 896"
                                                                  width="1em"
                                                                >
                                                                  <defs
                                                                    key="svg-plus-svg-0"
                                                                  >
                                                                    <style
                                                                      key="svg-plus-svg-0-defs-0"
                                                                    />
                                                                  </defs>
                                                                  <path
                                                                    d="M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z"
                                                                    key="svg-plus-svg-1"
                                                                  />
                                                                  <path
                                                                    d="M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z"
                                                                    key="svg-plus-svg-2"
                                                                  />
                                                                </svg>
                                                              </IconReact>
                                                            </span>
                                                          </ForwardRef(AntdIcon)>
                                                        </ForwardRef(PlusOutlined)>
                                                        添加
                                                      </button>
                                                    </Wave>
                                                  </Button>
                                                </FormItem>
                                              </div>
                                              <ForwardRef
                                                motionAppear={true}
                                                motionName="show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <CSSMotion
                                                  internalRef={null}
                                                  motionAppear={true}
                                                  motionEnter={true}
                                                  motionLeave={true}
                                                  motionName="show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                />
                                              </ForwardRef>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </FormItem>
                                </_default>
                              </div>
                            </Items>
                          </Field>
                        </List>
                      </FormList>
                    </div>
                  </_default>
                  <_default
                    key="money"
                    name="money"
                    rules={
                      Array [
                        Object {
                          "message": "此处不能为空",
                          "required": true,
                        },
                      ]
                    }
                  >
                    <FormItem
                      required={true}
                    >
                      <Row
                        className="ant-form-item"
                        gutter={0}
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            prefixCls="ant-form"
                          />
                          <FormItemInput
                            errors={Array []}
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            required={true}
                            validateStatus=""
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <FormItem
                                    name="money"
                                    noStyle={true}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "此处不能为空",
                                          "required": true,
                                        },
                                      ]
                                    }
                                  >
                                    <Field
                                      name="money"
                                      noStyle={true}
                                      onReset={[Function]}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "此处不能为空",
                                            "required": true,
                                          },
                                        ]
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <InputMoney
                                        id="money"
                                        onChange={[Function]}
                                        placeholder="请输入"
                                      >
                                        <div
                                          className="input-money"
                                        >
                                          <Input
                                            id="money"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            placeholder="请输入"
                                            suffix="元"
                                            type="text"
                                          >
                                            <ClearableLabeledInput
                                              element={
                                                <input
                                                  className="ant-input"
                                                  id="money"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="请输入"
                                                  type="text"
                                                />
                                              }
                                              focused={false}
                                              handleReset={[Function]}
                                              id="money"
                                              inputType="input"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              placeholder="请输入"
                                              prefixCls="ant-input"
                                              suffix="元"
                                              type="text"
                                              value=""
                                            >
                                              <span
                                                className="ant-input-affix-wrapper"
                                              >
                                                <input
                                                  className="ant-input"
                                                  id="money"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="请输入"
                                                  style={null}
                                                  type="text"
                                                  value=""
                                                />
                                                <span
                                                  className="ant-input-suffix"
                                                >
                                                  元
                                                </span>
                                              </span>
                                            </ClearableLabeledInput>
                                          </Input>
                                          <div
                                            className="zh"
                                          />
                                        </div>
                                      </InputMoney>
                                    </Field>
                                  </FormItem>
                                </div>
                                <ForwardRef
                                  motionAppear={true}
                                  motionName="show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <CSSMotion
                                    internalRef={null}
                                    motionAppear={true}
                                    motionEnter={true}
                                    motionLeave={true}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  />
                                </ForwardRef>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </_default>
                  <_default
                    key="text"
                    label="text"
                    name="text"
                    rules={
                      Array [
                        Object {
                          "message": "此处不能为空",
                          "required": true,
                        },
                      ]
                    }
                  >
                    <FormItem
                      label="text"
                      required={true}
                    >
                      <Row
                        className="ant-form-item"
                        gutter={0}
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            label="text"
                            prefixCls="ant-form"
                          >
                            <Col
                              className="ant-form-item-label"
                            >
                              <div
                                className="ant-col ant-form-item-label"
                                style={Object {}}
                              >
                                <label
                                  className=""
                                  title="text"
                                >
                                  text
                                </label>
                              </div>
                            </Col>
                          </FormItemLabel>
                          <FormItemInput
                            errors={Array []}
                            label="text"
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            required={true}
                            validateStatus=""
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <FormItem
                                    label="text"
                                    name="text"
                                    noStyle={true}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "此处不能为空",
                                          "required": true,
                                        },
                                      ]
                                    }
                                  >
                                    <Field
                                      label="text"
                                      name="text"
                                      noStyle={true}
                                      onReset={[Function]}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "此处不能为空",
                                            "required": true,
                                          },
                                        ]
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <_default
                                        id="text"
                                        onChange={[Function]}
                                        placeholder="请输入"
                                      >
                                        <Text
                                          editable={
                                            Object {
                                              "onChange": [Function],
                                            }
                                          }
                                          id="text"
                                          placeholder="请输入"
                                        >
                                          <withConfigConsumer(Base)
                                            component="span"
                                            editable={
                                              Object {
                                                "onChange": [Function],
                                              }
                                            }
                                            ellipsis={false}
                                            id="text"
                                            placeholder="请输入"
                                          >
                                            <Base
                                              component="span"
                                              editable={
                                                Object {
                                                  "onChange": [Function],
                                                }
                                              }
                                              ellipsis={false}
                                              getPrefixCls={[Function]}
                                              id="text"
                                              placeholder="请输入"
                                              prefixCls="ant-typography"
                                              renderEmpty={[Function]}
                                            >
                                              <LocaleReceiver
                                                componentName="Text"
                                              >
                                                <ResizeObserver
                                                  disabled={true}
                                                  onResize={[Function]}
                                                >
                                                  <Typography
                                                    className=""
                                                    component="span"
                                                    id="text"
                                                    placeholder="请输入"
                                                    style={
                                                      Object {
                                                        "WebkitLineClamp": null,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="ant-typography"
                                                      id="text"
                                                      placeholder="请输入"
                                                      style={
                                                        Object {
                                                          "WebkitLineClamp": null,
                                                        }
                                                      }
                                                    >
                                                      <Tooltip
                                                        arrowPointAtCenter={false}
                                                        autoAdjustOverflow={true}
                                                        key="edit"
                                                        mouseEnterDelay={0.1}
                                                        mouseLeaveDelay={0.1}
                                                        placement="top"
                                                        title="Edit"
                                                        transitionName="zoom-big-fast"
                                                      >
                                                        <ForwardRef(Tooltip)
                                                          arrowPointAtCenter={false}
                                                          autoAdjustOverflow={true}
                                                          builtinPlacements={
                                                            Object {
                                                              "bottom": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tc",
                                                                  "bc",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "bottomLeft": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "bl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "bottomRight": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "br",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "left": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  -4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "cr",
                                                                  "cl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "leftBottom": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  -4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "bl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "leftTop": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  -4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "tl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "right": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "cl",
                                                                  "cr",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "rightBottom": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "br",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "rightTop": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "tr",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "top": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bc",
                                                                  "tc",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "topLeft": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "tl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "topRight": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "tr",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          mouseEnterDelay={0.1}
                                                          mouseLeaveDelay={0.1}
                                                          onPopupAlign={[Function]}
                                                          onVisibleChange={[Function]}
                                                          overlay="Edit"
                                                          overlayClassName=""
                                                          placement="top"
                                                          prefixCls="ant-tooltip"
                                                          title="Edit"
                                                          transitionName="zoom-big-fast"
                                                          visible={false}
                                                        >
                                                          <Trigger
                                                            action={
                                                              Array [
                                                                "hover",
                                                              ]
                                                            }
                                                            afterPopupVisibleChange={[Function]}
                                                            arrowPointAtCenter={false}
                                                            autoAdjustOverflow={true}
                                                            blurDelay={0.15}
                                                            builtinPlacements={
                                                              Object {
                                                                "bottom": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tc",
                                                                    "bc",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "bottomLeft": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "bl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "bottomRight": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "br",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "left": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    -4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "cr",
                                                                    "cl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "leftBottom": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    -4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "bl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "leftTop": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    -4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "tl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "right": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "cl",
                                                                    "cr",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "rightBottom": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "br",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "rightTop": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "tr",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "top": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bc",
                                                                    "tc",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "topLeft": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "tl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "topRight": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "tr",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                              }
                                                            }
                                                            defaultPopupVisible={false}
                                                            destroyPopupOnHide={false}
                                                            focusDelay={0}
                                                            getDocument={[Function]}
                                                            getPopupClassNameFromAlign={[Function]}
                                                            hideAction={Array []}
                                                            mask={false}
                                                            maskClosable={true}
                                                            mouseEnterDelay={0.1}
                                                            mouseLeaveDelay={0.1}
                                                            onPopupAlign={[Function]}
                                                            onPopupVisibleChange={[Function]}
                                                            overlay="Edit"
                                                            popup={[Function]}
                                                            popupAlign={Object {}}
                                                            popupClassName=""
                                                            popupPlacement="top"
                                                            popupStyle={Object {}}
                                                            popupTransitionName="zoom-big-fast"
                                                            popupVisible={false}
                                                            prefixCls="ant-tooltip"
                                                            showAction={Array []}
                                                            title="Edit"
                                                            visible={false}
                                                          >
                                                            <TransButton
                                                              aria-label="Edit"
                                                              className="ant-typography-edit"
                                                              key="trigger"
                                                              onClick={[Function]}
                                                              onMouseEnter={[Function]}
                                                              onMouseLeave={[Function]}
                                                            >
                                                              <div
                                                                aria-label="Edit"
                                                                className="ant-typography-edit"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                role="button"
                                                                style={
                                                                  Object {
                                                                    "background": "transparent",
                                                                    "border": 0,
                                                                    "display": "inline-block",
                                                                    "lineHeight": "inherit",
                                                                    "padding": 0,
                                                                  }
                                                                }
                                                                tabIndex={0}
                                                              >
                                                                <ForwardRef(EditOutlined)
                                                                  role="button"
                                                                >
                                                                  <ForwardRef(AntdIcon)
                                                                    icon={
                                                                      Object {
                                                                        "icon": Object {
                                                                          "attrs": Object {
                                                                            "focusable": "false",
                                                                            "viewBox": "64 64 896 896",
                                                                          },
                                                                          "children": Array [
                                                                            Object {
                                                                              "attrs": Object {
                                                                                "d": "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z",
                                                                              },
                                                                              "tag": "path",
                                                                            },
                                                                          ],
                                                                          "tag": "svg",
                                                                        },
                                                                        "name": "edit",
                                                                        "theme": "outlined",
                                                                      }
                                                                    }
                                                                    role="button"
                                                                  >
                                                                    <span
                                                                      aria-label="edit"
                                                                      className="anticon anticon-edit"
                                                                      role="button"
                                                                    >
                                                                      <IconReact
                                                                        className=""
                                                                        icon={
                                                                          Object {
                                                                            "icon": Object {
                                                                              "attrs": Object {
                                                                                "focusable": "false",
                                                                                "viewBox": "64 64 896 896",
                                                                              },
                                                                              "children": Array [
                                                                                Object {
                                                                                  "attrs": Object {
                                                                                    "d": "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z",
                                                                                  },
                                                                                  "tag": "path",
                                                                                },
                                                                              ],
                                                                              "tag": "svg",
                                                                            },
                                                                            "name": "edit",
                                                                            "theme": "outlined",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          className=""
                                                                          data-icon="edit"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height="1em"
                                                                          key="svg-edit"
                                                                          viewBox="64 64 896 896"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z"
                                                                            key="svg-edit-svg-0"
                                                                          />
                                                                        </svg>
                                                                      </IconReact>
                                                                    </span>
                                                                  </ForwardRef(AntdIcon)>
                                                                </ForwardRef(EditOutlined)>
                                                              </div>
                                                            </TransButton>
                                                          </Trigger>
                                                        </ForwardRef(Tooltip)>
                                                      </Tooltip>
                                                    </span>
                                                  </Typography>
                                                </ResizeObserver>
                                              </LocaleReceiver>
                                            </Base>
                                          </withConfigConsumer(Base)>
                                        </Text>
                                      </_default>
                                    </Field>
                                  </FormItem>
                                </div>
                                <ForwardRef
                                  motionAppear={true}
                                  motionName="show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <CSSMotion
                                    internalRef={null}
                                    motionAppear={true}
                                    motionEnter={true}
                                    motionLeave={true}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  />
                                </ForwardRef>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </_default>
                  <_default
                    key="switch"
                    label="switch"
                    name="switch"
                    rules={
                      Array [
                        Object {
                          "message": "请选择switch",
                          "required": true,
                        },
                      ]
                    }
                    valuePropName="checked"
                  >
                    <FormItem
                      label="switch"
                      required={true}
                      valuePropName="checked"
                    >
                      <Row
                        className="ant-form-item"
                        gutter={0}
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            label="switch"
                            prefixCls="ant-form"
                            valuePropName="checked"
                          >
                            <Col
                              className="ant-form-item-label"
                            >
                              <div
                                className="ant-col ant-form-item-label"
                                style={Object {}}
                              >
                                <label
                                  className=""
                                  title="switch"
                                >
                                  switch
                                </label>
                              </div>
                            </Col>
                          </FormItemLabel>
                          <FormItemInput
                            errors={Array []}
                            label="switch"
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            required={true}
                            validateStatus=""
                            valuePropName="checked"
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <FormItem
                                    label="switch"
                                    name="switch"
                                    noStyle={true}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "请选择switch",
                                          "required": true,
                                        },
                                      ]
                                    }
                                    valuePropName="checked"
                                  >
                                    <Field
                                      label="switch"
                                      name="switch"
                                      noStyle={true}
                                      onReset={[Function]}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "请选择switch",
                                            "required": true,
                                          },
                                        ]
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="checked"
                                    >
                                      <Switch
                                        id="switch"
                                        onChange={[Function]}
                                        placeholder="请选择switch"
                                      >
                                        <Wave
                                          insertExtraNode={true}
                                        >
                                          <Switch
                                            checkedChildren={null}
                                            className=""
                                            defaultChecked={false}
                                            id="switch"
                                            loadingIcon={null}
                                            onChange={[Function]}
                                            placeholder="请选择switch"
                                            prefixCls="ant-switch"
                                            unCheckedChildren={null}
                                          >
                                            <button
                                              aria-checked={false}
                                              className="ant-switch"
                                              defaultChecked={false}
                                              id="switch"
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onMouseUp={[Function]}
                                              placeholder="请选择switch"
                                              role="switch"
                                              type="button"
                                            >
                                              <span
                                                className="ant-switch-inner"
                                              />
                                            </button>
                                          </Switch>
                                        </Wave>
                                      </Switch>
                                    </Field>
                                  </FormItem>
                                </div>
                                <ForwardRef
                                  motionAppear={true}
                                  motionName="show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <CSSMotion
                                    internalRef={null}
                                    motionAppear={true}
                                    motionEnter={true}
                                    motionLeave={true}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  />
                                </ForwardRef>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </_default>
                  <_default
                    component={
                      <Input
                        type="text"
                      />
                    }
                    key="custom"
                    label="custom"
                    name="custom"
                    rules={
                      Array [
                        Object {
                          "message": "请输入custom",
                          "required": true,
                        },
                      ]
                    }
                  >
                    <FormItem
                      component={
                        <Input
                          type="text"
                        />
                      }
                      label="custom"
                      required={true}
                    >
                      <Row
                        className="ant-form-item"
                        component={
                          <Input
                            type="text"
                          />
                        }
                        gutter={0}
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          component={
                            <Input
                              type="text"
                            />
                          }
                          style={Object {}}
                        >
                          <FormItemLabel
                            component={
                              <Input
                                type="text"
                              />
                            }
                            label="custom"
                            prefixCls="ant-form"
                          >
                            <Col
                              className="ant-form-item-label"
                            >
                              <div
                                className="ant-col ant-form-item-label"
                                style={Object {}}
                              >
                                <label
                                  className=""
                                  title="custom"
                                >
                                  custom
                                </label>
                              </div>
                            </Col>
                          </FormItemLabel>
                          <FormItemInput
                            component={
                              <Input
                                type="text"
                              />
                            }
                            errors={Array []}
                            label="custom"
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            required={true}
                            validateStatus=""
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <FormItem
                                    component={
                                      <Input
                                        type="text"
                                      />
                                    }
                                    label="custom"
                                    name="custom"
                                    noStyle={true}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "请输入custom",
                                          "required": true,
                                        },
                                      ]
                                    }
                                  >
                                    <Field
                                      component={
                                        <Input
                                          type="text"
                                        />
                                      }
                                      label="custom"
                                      name="custom"
                                      noStyle={true}
                                      onReset={[Function]}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "请输入custom",
                                            "required": true,
                                          },
                                        ]
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <Input
                                        id="custom"
                                        onChange={[Function]}
                                        placeholder="请输入custom"
                                        type="text"
                                      >
                                        <ClearableLabeledInput
                                          element={
                                            <input
                                              className="ant-input"
                                              id="custom"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              placeholder="请输入custom"
                                              type="text"
                                            />
                                          }
                                          focused={false}
                                          handleReset={[Function]}
                                          id="custom"
                                          inputType="input"
                                          onChange={[Function]}
                                          placeholder="请输入custom"
                                          prefixCls="ant-input"
                                          type="text"
                                          value=""
                                        >
                                          <input
                                            className="ant-input"
                                            id="custom"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="请输入custom"
                                            type="text"
                                            value=""
                                          />
                                        </ClearableLabeledInput>
                                      </Input>
                                    </Field>
                                  </FormItem>
                                </div>
                                <ForwardRef
                                  motionAppear={true}
                                  motionName="show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <CSSMotion
                                    internalRef={null}
                                    motionAppear={true}
                                    motionEnter={true}
                                    motionLeave={true}
                                    motionName="show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  />
                                </ForwardRef>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </_default>
                  <_default
                    key="1_0"
                    name="a"
                  />
                  <div>
                    1
                  </div>
                  123
                </div>
              </Items>
            </div>
          </Items>
        </form>
      </ForwardRef(Form)>
    </SizeContextProvider>
  </ForwardRef(InternalForm)>
</InternalForm>
`;

exports[`YFormItems no children 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <form
        class="ant-form ant-form-horizontal"
      >
        <div
          class="yform-items"
        >
          <div
            class="yform-items"
          />
        </div>
      </form>
    </div>
  </body>,
  "container": <div>
    <form
      class="ant-form ant-form-horizontal"
    >
      <div
        class="yform-items"
      >
        <div
          class="yform-items"
        />
      </div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`YFormItems oneLine 1`] = `
<InternalForm>
  <ForwardRef(InternalForm)
    onFinish={[Function]}
  >
    <SizeContextProvider>
      <ForwardRef(Form)
        className="ant-form ant-form-horizontal"
        form={
          Object {
            "__INTERNAL__": Object {
              "name": undefined,
            },
            "getFieldError": [Function],
            "getFieldValue": [Function],
            "getFieldsError": [Function],
            "getFieldsValue": [Function],
            "getInternalHooks": [Function],
            "isFieldTouched": [Function],
            "isFieldValidating": [Function],
            "isFieldsTouched": [Function],
            "isFieldsValidating": [Function],
            "resetFields": [Function],
            "scrollToField": [Function],
            "setFields": [Function],
            "setFieldsValue": [Function],
            "submit": [Function],
            "validateFields": [Function],
          }
        }
        onFinish={[Function]}
      >
        <form
          className="ant-form ant-form-horizontal"
          onSubmit={[Function]}
        >
          <Items>
            <div
              className="yform-items"
            >
              <_default
                className="mb0"
                key="0"
                label="多字段"
              >
                <FormItem
                  className="mb0"
                  label="多字段"
                  required={false}
                >
                  <Row
                    className="ant-form-item mb0"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item mb0"
                      style={Object {}}
                    >
                      <FormItemLabel
                        className="mb0"
                        label="多字段"
                        prefixCls="ant-form"
                      >
                        <Col
                          className="ant-form-item-label"
                        >
                          <div
                            className="ant-col ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className=""
                              title="多字段"
                            >
                              多字段
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        className="mb0"
                        errors={Array []}
                        label="多字段"
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        required={false}
                        validateStatus=""
                      >
                        <Col
                          className="ant-form-item-control"
                        >
                          <div
                            className="ant-col ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <FormItem
                                className="mb0"
                                label="多字段"
                                noStyle={true}
                              >
                                <_default
                                  componentProps={
                                    Object {
                                      "oneLineStyle": Array [
                                        "50%",
                                        8,
                                        "50%",
                                      ],
                                    }
                                  }
                                  items={[Function]}
                                  key="0"
                                  label="多字段"
                                  plugins={
                                    Object {
                                      "noLabelLayout": false,
                                    }
                                  }
                                  type="oneLine"
                                >
                                  <div
                                    className="one-line"
                                  >
                                    <Items
                                      label="多字段"
                                      plugins={
                                        Object {
                                          "noLabelLayout": false,
                                        }
                                      }
                                      type="oneLine"
                                    >
                                      <div
                                        className="yform-items"
                                      >
                                        <_default
                                          className="dib"
                                          key="name"
                                          label="姓名"
                                          name="name"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "请输入姓名",
                                                "required": undefined,
                                              },
                                            ]
                                          }
                                          style={
                                            Object {
                                              "display": "inline-block",
                                              "width": "calc(50% - 4px)",
                                            }
                                          }
                                        >
                                          <FormItem
                                            className="dib"
                                            label="姓名"
                                            style={
                                              Object {
                                                "display": "inline-block",
                                                "width": "calc(50% - 4px)",
                                              }
                                            }
                                          >
                                            <Row
                                              className="ant-form-item dib"
                                              gutter={0}
                                              key="row"
                                              style={
                                                Object {
                                                  "display": "inline-block",
                                                  "width": "calc(50% - 4px)",
                                                }
                                              }
                                            >
                                              <div
                                                className="ant-row ant-form-item dib"
                                                style={
                                                  Object {
                                                    "display": "inline-block",
                                                    "width": "calc(50% - 4px)",
                                                  }
                                                }
                                              >
                                                <FormItemLabel
                                                  className="dib"
                                                  label="姓名"
                                                  prefixCls="ant-form"
                                                  style={
                                                    Object {
                                                      "display": "inline-block",
                                                      "width": "calc(50% - 4px)",
                                                    }
                                                  }
                                                >
                                                  <Col
                                                    className="ant-form-item-label"
                                                  >
                                                    <div
                                                      className="ant-col ant-form-item-label"
                                                      style={Object {}}
                                                    >
                                                      <label
                                                        className=""
                                                        title="姓名"
                                                      >
                                                        姓名
                                                      </label>
                                                    </div>
                                                  </Col>
                                                </FormItemLabel>
                                                <FormItemInput
                                                  className="dib"
                                                  errors={Array []}
                                                  label="姓名"
                                                  onDomErrorVisibleChange={[Function]}
                                                  prefixCls="ant-form"
                                                  style={
                                                    Object {
                                                      "display": "inline-block",
                                                      "width": "calc(50% - 4px)",
                                                    }
                                                  }
                                                  validateStatus=""
                                                >
                                                  <Col
                                                    className="ant-form-item-control"
                                                  >
                                                    <div
                                                      className="ant-col ant-form-item-control"
                                                      style={Object {}}
                                                    >
                                                      <div
                                                        className="ant-form-item-control-input"
                                                      >
                                                        <FormItem
                                                          className="dib"
                                                          label="姓名"
                                                          name="name"
                                                          noStyle={true}
                                                          rules={
                                                            Array [
                                                              Object {
                                                                "message": "请输入姓名",
                                                                "required": undefined,
                                                              },
                                                            ]
                                                          }
                                                          style={
                                                            Object {
                                                              "display": "inline-block",
                                                              "width": "calc(50% - 4px)",
                                                            }
                                                          }
                                                        >
                                                          <Field
                                                            className="dib"
                                                            label="姓名"
                                                            name="name"
                                                            noStyle={true}
                                                            onReset={[Function]}
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "请输入姓名",
                                                                  "required": undefined,
                                                                },
                                                              ]
                                                            }
                                                            style={
                                                              Object {
                                                                "display": "inline-block",
                                                                "width": "calc(50% - 4px)",
                                                              }
                                                            }
                                                            trigger="onChange"
                                                            validateTrigger="onChange"
                                                            valuePropName="value"
                                                          >
                                                            <Input
                                                              id="name"
                                                              onChange={[Function]}
                                                              placeholder="请输入姓名"
                                                              type="text"
                                                            >
                                                              <ClearableLabeledInput
                                                                element={
                                                                  <input
                                                                    className="ant-input"
                                                                    id="name"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    placeholder="请输入姓名"
                                                                    type="text"
                                                                  />
                                                                }
                                                                focused={false}
                                                                handleReset={[Function]}
                                                                id="name"
                                                                inputType="input"
                                                                onChange={[Function]}
                                                                placeholder="请输入姓名"
                                                                prefixCls="ant-input"
                                                                type="text"
                                                                value=""
                                                              >
                                                                <input
                                                                  className="ant-input"
                                                                  id="name"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  placeholder="请输入姓名"
                                                                  type="text"
                                                                  value=""
                                                                />
                                                              </ClearableLabeledInput>
                                                            </Input>
                                                          </Field>
                                                        </FormItem>
                                                      </div>
                                                      <ForwardRef
                                                        motionAppear={true}
                                                        motionName="show-help"
                                                        onLeaveEnd={[Function]}
                                                        removeOnLeave={true}
                                                        visible={false}
                                                      >
                                                        <CSSMotion
                                                          internalRef={null}
                                                          motionAppear={true}
                                                          motionEnter={true}
                                                          motionLeave={true}
                                                          motionName="show-help"
                                                          onLeaveEnd={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        />
                                                      </ForwardRef>
                                                    </div>
                                                  </Col>
                                                </FormItemInput>
                                              </div>
                                            </Row>
                                          </FormItem>
                                        </_default>
                                        <span
                                          className="dib"
                                          key="center"
                                          style={
                                            Object {
                                              "display": "inline-block",
                                              "width": "8px",
                                            }
                                          }
                                        />
                                        <_default
                                          className="dib"
                                          key="age"
                                          label="年龄"
                                          name="age"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "请输入年龄",
                                                "required": undefined,
                                              },
                                            ]
                                          }
                                          style={
                                            Object {
                                              "display": "inline-block",
                                              "width": "calc(50% - 4px)",
                                            }
                                          }
                                        >
                                          <FormItem
                                            className="dib"
                                            label="年龄"
                                            style={
                                              Object {
                                                "display": "inline-block",
                                                "width": "calc(50% - 4px)",
                                              }
                                            }
                                          >
                                            <Row
                                              className="ant-form-item dib"
                                              gutter={0}
                                              key="row"
                                              style={
                                                Object {
                                                  "display": "inline-block",
                                                  "width": "calc(50% - 4px)",
                                                }
                                              }
                                            >
                                              <div
                                                className="ant-row ant-form-item dib"
                                                style={
                                                  Object {
                                                    "display": "inline-block",
                                                    "width": "calc(50% - 4px)",
                                                  }
                                                }
                                              >
                                                <FormItemLabel
                                                  className="dib"
                                                  label="年龄"
                                                  prefixCls="ant-form"
                                                  style={
                                                    Object {
                                                      "display": "inline-block",
                                                      "width": "calc(50% - 4px)",
                                                    }
                                                  }
                                                >
                                                  <Col
                                                    className="ant-form-item-label"
                                                  >
                                                    <div
                                                      className="ant-col ant-form-item-label"
                                                      style={Object {}}
                                                    >
                                                      <label
                                                        className=""
                                                        title="年龄"
                                                      >
                                                        年龄
                                                      </label>
                                                    </div>
                                                  </Col>
                                                </FormItemLabel>
                                                <FormItemInput
                                                  className="dib"
                                                  errors={Array []}
                                                  label="年龄"
                                                  onDomErrorVisibleChange={[Function]}
                                                  prefixCls="ant-form"
                                                  style={
                                                    Object {
                                                      "display": "inline-block",
                                                      "width": "calc(50% - 4px)",
                                                    }
                                                  }
                                                  validateStatus=""
                                                >
                                                  <Col
                                                    className="ant-form-item-control"
                                                  >
                                                    <div
                                                      className="ant-col ant-form-item-control"
                                                      style={Object {}}
                                                    >
                                                      <div
                                                        className="ant-form-item-control-input"
                                                      >
                                                        <FormItem
                                                          className="dib"
                                                          label="年龄"
                                                          name="age"
                                                          noStyle={true}
                                                          rules={
                                                            Array [
                                                              Object {
                                                                "message": "请输入年龄",
                                                                "required": undefined,
                                                              },
                                                            ]
                                                          }
                                                          style={
                                                            Object {
                                                              "display": "inline-block",
                                                              "width": "calc(50% - 4px)",
                                                            }
                                                          }
                                                        >
                                                          <Field
                                                            className="dib"
                                                            label="年龄"
                                                            name="age"
                                                            noStyle={true}
                                                            onReset={[Function]}
                                                            rules={
                                                              Array [
                                                                Object {
                                                                  "message": "请输入年龄",
                                                                  "required": undefined,
                                                                },
                                                              ]
                                                            }
                                                            style={
                                                              Object {
                                                                "display": "inline-block",
                                                                "width": "calc(50% - 4px)",
                                                              }
                                                            }
                                                            trigger="onChange"
                                                            validateTrigger="onChange"
                                                            valuePropName="value"
                                                          >
                                                            <Input
                                                              id="age"
                                                              onChange={[Function]}
                                                              placeholder="请输入年龄"
                                                              type="text"
                                                            >
                                                              <ClearableLabeledInput
                                                                element={
                                                                  <input
                                                                    className="ant-input"
                                                                    id="age"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    placeholder="请输入年龄"
                                                                    type="text"
                                                                  />
                                                                }
                                                                focused={false}
                                                                handleReset={[Function]}
                                                                id="age"
                                                                inputType="input"
                                                                onChange={[Function]}
                                                                placeholder="请输入年龄"
                                                                prefixCls="ant-input"
                                                                type="text"
                                                                value=""
                                                              >
                                                                <input
                                                                  className="ant-input"
                                                                  id="age"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  placeholder="请输入年龄"
                                                                  type="text"
                                                                  value=""
                                                                />
                                                              </ClearableLabeledInput>
                                                            </Input>
                                                          </Field>
                                                        </FormItem>
                                                      </div>
                                                      <ForwardRef
                                                        motionAppear={true}
                                                        motionName="show-help"
                                                        onLeaveEnd={[Function]}
                                                        removeOnLeave={true}
                                                        visible={false}
                                                      >
                                                        <CSSMotion
                                                          internalRef={null}
                                                          motionAppear={true}
                                                          motionEnter={true}
                                                          motionLeave={true}
                                                          motionName="show-help"
                                                          onLeaveEnd={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        />
                                                      </ForwardRef>
                                                    </div>
                                                  </Col>
                                                </FormItemInput>
                                              </div>
                                            </Row>
                                          </FormItem>
                                        </_default>
                                      </div>
                                    </Items>
                                  </div>
                                </_default>
                              </FormItem>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </FormItem>
              </_default>
              <_default
                className="mb0"
                key="1"
                label="多字段"
              >
                <FormItem
                  className="mb0"
                  label="多字段"
                  required={false}
                >
                  <Row
                    className="ant-form-item mb0"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item mb0"
                      style={Object {}}
                    >
                      <FormItemLabel
                        className="mb0"
                        label="多字段"
                        prefixCls="ant-form"
                      >
                        <Col
                          className="ant-form-item-label"
                        >
                          <div
                            className="ant-col ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className=""
                              title="多字段"
                            >
                              多字段
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        className="mb0"
                        errors={Array []}
                        label="多字段"
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        required={false}
                        validateStatus=""
                      >
                        <Col
                          className="ant-form-item-control"
                        >
                          <div
                            className="ant-col ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <FormItem
                                className="mb0"
                                label="多字段"
                                noStyle={true}
                              >
                                <_default
                                  items={[Function]}
                                  key="1"
                                  label="多字段"
                                  type="oneLine"
                                >
                                  <div
                                    className="one-line"
                                  >
                                    <Items
                                      label="多字段"
                                      type="oneLine"
                                    >
                                      <div
                                        className="yform-items"
                                      />
                                    </Items>
                                  </div>
                                </_default>
                              </FormItem>
                            </div>
                            <ForwardRef
                              motionAppear={true}
                              motionName="show-help"
                              onLeaveEnd={[Function]}
                              removeOnLeave={true}
                              visible={false}
                            >
                              <CSSMotion
                                internalRef={null}
                                motionAppear={true}
                                motionEnter={true}
                                motionLeave={true}
                                motionName="show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              />
                            </ForwardRef>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </FormItem>
              </_default>
            </div>
          </Items>
        </form>
      </ForwardRef(Form)>
    </SizeContextProvider>
  </ForwardRef(InternalForm)>
</InternalForm>
`;

exports[`YFormItems renders 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <form
        class="ant-form ant-form-horizontal"
      >
        <div
          class="yform-items"
        >
          <div
            class="yform-items"
          >
            <div
              class="ant-row ant-form-item"
            >
              <div
                class="ant-col ant-form-item-control"
              >
                <div
                  class="ant-form-item-control-input"
                >
                  <input
                    class="ant-input"
                    id="demo"
                    placeholder="请输入"
                    type="text"
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              class="ant-row ant-form-item"
            >
              <div
                class="ant-col ant-form-item-label"
              >
                <label
                  class=""
                  title="money"
                >
                  money
                </label>
              </div>
              <div
                class="ant-col ant-form-item-control"
              >
                <div
                  class="ant-form-item-control-input"
                >
                  <div
                    class="input-money"
                  >
                    <span
                      class="ant-input-affix-wrapper"
                    >
                      <input
                        class="ant-input"
                        id="money"
                        placeholder="请输入money"
                        type="text"
                        value=""
                      />
                      <span
                        class="ant-input-suffix"
                      >
                        元
                      </span>
                    </span>
                    <div
                      class="zh"
                    />
                  </div>
                </div>
              </div>
            </div>
            <div
              class="ant-row ant-form-item"
            >
              <div
                class="ant-col ant-form-item-control"
              >
                <div
                  class="ant-form-item-control-input"
                >
                  <div
                    class="yform-items"
                  >
                    <button
                      class="ant-btn ant-btn-primary"
                      type="submit"
                    >
                      <span>
                        submit
                      </span>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </form>
    </div>
  </body>,
  "container": <div>
    <form
      class="ant-form ant-form-horizontal"
    >
      <div
        class="yform-items"
      >
        <div
          class="yform-items"
        >
          <div
            class="ant-row ant-form-item"
          >
            <div
              class="ant-col ant-form-item-control"
            >
              <div
                class="ant-form-item-control-input"
              >
                <input
                  class="ant-input"
                  id="demo"
                  placeholder="请输入"
                  type="text"
                  value=""
                />
              </div>
            </div>
          </div>
          <div
            class="ant-row ant-form-item"
          >
            <div
              class="ant-col ant-form-item-label"
            >
              <label
                class=""
                title="money"
              >
                money
              </label>
            </div>
            <div
              class="ant-col ant-form-item-control"
            >
              <div
                class="ant-form-item-control-input"
              >
                <div
                  class="input-money"
                >
                  <span
                    class="ant-input-affix-wrapper"
                  >
                    <input
                      class="ant-input"
                      id="money"
                      placeholder="请输入money"
                      type="text"
                      value=""
                    />
                    <span
                      class="ant-input-suffix"
                    >
                      元
                    </span>
                  </span>
                  <div
                    class="zh"
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            class="ant-row ant-form-item"
          >
            <div
              class="ant-col ant-form-item-control"
            >
              <div
                class="ant-form-item-control-input"
              >
                <div
                  class="yform-items"
                >
                  <button
                    class="ant-btn ant-btn-primary"
                    type="submit"
                  >
                    <span>
                      submit
                    </span>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
